{"ast":null,"code":"import _Tabs from \"antd/lib/tabs\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\nextjs-create-app\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nconst api = require(\"../lib/api\");\n\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport getConfig from \"next/config\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\nimport Repo from \"../components/Repo\"; // 存储 tabs 栏的状态,以参数的形式传递下去\n\nimport Router, { withRouter } from \"next/router\";\nimport { useEffect } from \"react\"; // 加入缓存策略\n\nimport LRU from \"lru-cache\";\nconst cache = new LRU({\n  maxAge: 1000 * 60 * 10\n}); // const Index = ({ Component, pageProps, reduxStore }) => {\n//   // console.log(isLogin);\n//   // console.log(userRepos);\n//   // console.log(userStaredRepos);\n//   return <span>去登录</span>;\n// };\n// 用于存储传递过来的数据\n// 注意：这个是在模块的全局作用域里面的，会一直存在的，永远都会有值\n// 所以对于服务端渲染，我们需要做层判断，不应该使用这个全局变量的值\n\nlet userLocalRepos, userLocalStaredRepos;\nconst isServer = true;\n\nfunction Index({\n  userRepos,\n  userStaredRepos,\n  user,\n  router\n}) {\n  const tabKey = router.query.key || \"1\";\n\n  const handelTabChange = activeKey => {\n    Router.push(`/?key=${activeKey}`);\n  }; // 第一进来的时候，如果请求的有数据，就应该把数据缓存起来了\n\n\n  useEffect(() => {\n    if (!isServer) {\n      cache.set(\"userRepos\", userRepos);\n      cache, set(\"userStaredRepos\", userStaredRepos); // userLocalRepos = userRepos;\n      // userLocalStaredRepos = userStaredRepos;\n    }\n  }, []);\n\n  if (!user || !user.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-3088588873\" + \" \" + \"root\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-3088588873\",\n        children: \"\\u4EB2\\uFF0C\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\\u54E6~\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        href: publicRuntimeConfig.OAUTH_URL,\n        children: \"\\u70B9\\u51FB\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n        id: \"3088588873\",\n        children: \".root.jsx-3088588873{height:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\pc\\\\\\\\Desktop\\\\\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\\\\\nextjs-create-app\\\\\\\\pages\\\\\\\\index.js */\"\n      }, void 0, false, void 0, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-4069790378\" + \" \" + \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-4069790378\" + \" \" + \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatar_url,\n        alt: \"user avatar\",\n        className: \"jsx-4069790378\" + \" \" + \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"jsx-4069790378\" + \" \" + \"login\",\n        children: user.login || \"--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"jsx-4069790378\" + \" \" + \"name\",\n        children: user.name || \"--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"jsx-4069790378\" + \" \" + \"bio\",\n        children: user.bio || \"--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jsx-4069790378\" + \" \" + \"email\",\n        children: [/*#__PURE__*/_jsxDEV(MailOutlined, {\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `mailto:${user.email}`,\n          className: \"jsx-4069790378\",\n          children: user.email || \"--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-4069790378\" + \" \" + \"user-repos\",\n      children: /*#__PURE__*/_jsxDEV(_Tabs, {\n        activeKey: tabKey,\n        onChange: handelTabChange,\n        animated: false,\n        children: [/*#__PURE__*/_jsxDEV(_Tabs.TabPane, {\n          tab: \"\\u4F60\\u7684\\u4ED3\\u5E93\",\n          children: userRepos.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n            repo: repo\n          }, repo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Tabs.TabPane, {\n          tab: \"\\u4F60\\u5173\\u6CE8\\u7684\\u4ED3\\u5E93\",\n          children: userStaredRepos.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n            repo: repo\n          }, repo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, \"2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"4069790378\",\n      children: \".root.jsx-4069790378{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:20px 0;}.user-info.jsx-4069790378{width:200px;margin-right:40px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.login.jsx-4069790378{font-weight:800;font-size:20px;margin-top:20px;}.name.jsx-4069790378{margin-top:20px;color:#333;}.bio.jsx-4069790378{margin-top:20px;color:#333;}.avatar.jsx-4069790378{width:100%;border-radius:5px;}.user-repos.jsx-4069790378{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\pc\\\\\\\\Desktop\\\\\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\\\\\nextjs-create-app\\\\\\\\pages\\\\\\\\index.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n} // 注意我们在组件中（getInitialProps）中，只会使用到 request ，因为 request 会帮助我们去判断是客户端还是服务端\n// 注意 getInitialProps 会在客户端不同页面跳转的时候使用，同样服务端如果我们访问的是 index 这个页面，也会调用 getInitialProps，在服务端渲染的时候调用的时候，我们的运行环境处于 node.js 环境，而不是浏览器的环境，如果我们在 node.js 的环境下请求就会出现请求的是 http://localhost:3000/ 这样的地址，所以会失败（默认的端口是80）\n// 注意这里是 ctx 而不是 {ctx}\n\n\nIndex.getInitialProps = async ctx => {\n  // 报 Error: connect ECONNREFUSED 127.0.0.1:80 的错误\n  // 如果是在浏览器里面发送的，会根据我们提供的路径会自动加上我们当前网站的域名（就是http://localhost:3000/）所以它完整请求路径就是 http://localhost:3000/github/search/repositories?q=react\n  // 如果是在服务端渲染的时候进行执行的话，所以没有浏览器里面的域名的，这个时候请求的路径自动在 axios 里面增加的 http://127.0.0.1（默认80端口）/github/search/repositories?q=react，这个时候就不对了，我们 80 端口没有启动，也不是我们想请求的地址\n  // const result = await axios\n  //   .get(\"/github/search/repositories?q=react\")\n  //   .then((resp) => console.log(resp));\n  // 注意 req 和 res 只有在服务端渲染的时候才会有\n  // 注意一旦登出了，我们需要做个请求的判断\n  // 可以通过 ctx.req 和 ctx.res （node.js 对象，不会存在于浏览器运行环境里面的）来进行判断，但是在符合在服务端可以判断。在客户端进行判断，是没有 ctx 对象的。\n  if (!isServer) {\n    if (userLocalRepos && userLocalStaredRepos) {\n      return {\n        userRepos: userLocalRepos,\n        userStaredRepos: userLocalStaredRepos\n      };\n    }\n  } // 发起请求，列出你所有的创建的仓库\n\n\n  const userRepos = await api.request({\n    url: \"/user/repos\"\n  }, ctx.req, ctx.res); // 被关注的仓库\n\n  const userStaredRepos = await api.request({\n    url: \"/gists/starred\"\n  }, ctx.req, ctx.res);\n  return {\n    isLogin: true,\n    userRepos: userRepos.data,\n    userStaredRepos: userStaredRepos.data\n  };\n}; // 注意在写 withRouter 和 connect 的时候，需要把 withRouter 放在外面\n\n\nexport default withRouter(connect(function mapState(state) {\n  return {\n    user: state.user\n  };\n})(Index));","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/pages/index.js"],"names":["api","require","MailOutlined","connect","getConfig","publicRuntimeConfig","Repo","Router","withRouter","useEffect","LRU","cache","maxAge","userLocalRepos","userLocalStaredRepos","isServer","Index","userRepos","userStaredRepos","user","router","tabKey","query","key","handelTabChange","activeKey","push","set","id","OAUTH_URL","avatar_url","login","name","bio","marginRight","email","map","repo","getInitialProps","ctx","request","url","req","res","isLogin","data","mapState","state"],"mappings":"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","sourcesContent":["const api = require(\"../lib/api\");\r\n\r\nimport { Button, Tabs } from \"antd\";\r\nimport { MailOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport getConfig from \"next/config\";\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nimport Repo from \"../components/Repo\";\r\n\r\n// 存储 tabs 栏的状态,以参数的形式传递下去\r\nimport Router, { withRouter } from \"next/router\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\n// 加入缓存策略\r\nimport LRU from \"lru-cache\";\r\n\r\nconst cache = new LRU({\r\n  maxAge: 1000 * 60 * 10,\r\n});\r\n\r\n// const Index = ({ Component, pageProps, reduxStore }) => {\r\n//   // console.log(isLogin);\r\n//   // console.log(userRepos);\r\n//   // console.log(userStaredRepos);\r\n//   return <span>去登录</span>;\r\n// };\r\n\r\n// 用于存储传递过来的数据\r\n// 注意：这个是在模块的全局作用域里面的，会一直存在的，永远都会有值\r\n// 所以对于服务端渲染，我们需要做层判断，不应该使用这个全局变量的值\r\nlet userLocalRepos, userLocalStaredRepos;\r\n\r\nconst isServer = typeof window === \"undefined\";\r\n\r\nfunction Index({ userRepos, userStaredRepos, user, router }) {\r\n  const tabKey = router.query.key || \"1\";\r\n\r\n  const handelTabChange = (activeKey) => {\r\n    Router.push(`/?key=${activeKey}`);\r\n  };\r\n\r\n  // 第一进来的时候，如果请求的有数据，就应该把数据缓存起来了\r\n  useEffect(() => {\r\n    if (!isServer) {\r\n      cache.set(\"userRepos\", userRepos);\r\n      cache, set(\"userStaredRepos\", userStaredRepos);\r\n      // userLocalRepos = userRepos;\r\n      // userLocalStaredRepos = userStaredRepos;\r\n    }\r\n  }, []);\r\n\r\n  if (!user || !user.id) {\r\n    return (\r\n      <div className=\"root\">\r\n        <p>亲，您还没有登录哦~</p>\r\n        <Button type=\"primary\" href={publicRuntimeConfig.OAUTH_URL}>\r\n          点击登录\r\n        </Button>\r\n        <style jsx>\r\n          {`\r\n            .root {\r\n              height: 400px;\r\n              display: flex;\r\n              flex-direction: column;\r\n              justify-content: center;\r\n              align-items: center;\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"user-info\">\r\n        <img src={user.avatar_url} className=\"avatar\" alt=\"user avatar\" />\r\n        <span className=\"login\">{user.login || \"--\"}</span>\r\n        <span className=\"name\">{user.name || \"--\"}</span>\r\n        <span className=\"bio\">{user.bio || \"--\"}</span>\r\n        <p className=\"email\">\r\n          <MailOutlined style={{ marginRight: 10 }} />\r\n          <a href={`mailto:${user.email}`}>{user.email || \"--\"}</a>\r\n        </p>\r\n      </div>\r\n      <div className=\"user-repos\">\r\n        <Tabs activeKey={tabKey} onChange={handelTabChange} animated={false}>\r\n          <Tabs.TabPane tab=\"你的仓库\" key=\"1\">\r\n            {userRepos.map((repo) => (\r\n              <Repo repo={repo} key={repo.id}></Repo>\r\n            ))}\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"你关注的仓库\" key=\"2\">\r\n            {userStaredRepos.map((repo) => (\r\n              <Repo repo={repo} key={repo.id}></Repo>\r\n            ))}\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n          .root {\r\n            display: flex;\r\n            align-items: flex-start;\r\n            padding: 20px 0;\r\n          }\r\n          .user-info {\r\n            width: 200px;\r\n            margin-right: 40px;\r\n            flex-shrink: 0;\r\n            display: flex;\r\n            flex-direction: column;\r\n          }\r\n          .login {\r\n            font-weight: 800;\r\n            font-size: 20px;\r\n            margin-top: 20px;\r\n          }\r\n          .name {\r\n            margin-top: 20px;\r\n            color: #333;\r\n          }\r\n          .bio {\r\n            margin-top: 20px;\r\n            color: #333;\r\n          }\r\n          .avatar {\r\n            width: 100%;\r\n            border-radius: 5px;\r\n          }\r\n          .user-repos {\r\n            flex-grow: 1;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n// 注意我们在组件中（getInitialProps）中，只会使用到 request ，因为 request 会帮助我们去判断是客户端还是服务端\r\n\r\n// 注意 getInitialProps 会在客户端不同页面跳转的时候使用，同样服务端如果我们访问的是 index 这个页面，也会调用 getInitialProps，在服务端渲染的时候调用的时候，我们的运行环境处于 node.js 环境，而不是浏览器的环境，如果我们在 node.js 的环境下请求就会出现请求的是 http://localhost:3000/ 这样的地址，所以会失败（默认的端口是80）\r\n\r\n// 注意这里是 ctx 而不是 {ctx}\r\nIndex.getInitialProps = async (ctx) => {\r\n  // 报 Error: connect ECONNREFUSED 127.0.0.1:80 的错误\r\n  // 如果是在浏览器里面发送的，会根据我们提供的路径会自动加上我们当前网站的域名（就是http://localhost:3000/）所以它完整请求路径就是 http://localhost:3000/github/search/repositories?q=react\r\n  // 如果是在服务端渲染的时候进行执行的话，所以没有浏览器里面的域名的，这个时候请求的路径自动在 axios 里面增加的 http://127.0.0.1（默认80端口）/github/search/repositories?q=react，这个时候就不对了，我们 80 端口没有启动，也不是我们想请求的地址\r\n  // const result = await axios\r\n  //   .get(\"/github/search/repositories?q=react\")\r\n  //   .then((resp) => console.log(resp));\r\n\r\n  // 注意 req 和 res 只有在服务端渲染的时候才会有\r\n\r\n  // 注意一旦登出了，我们需要做个请求的判断\r\n  // 可以通过 ctx.req 和 ctx.res （node.js 对象，不会存在于浏览器运行环境里面的）来进行判断，但是在符合在服务端可以判断。在客户端进行判断，是没有 ctx 对象的。\r\n\r\n  if (!isServer) {\r\n    if (userLocalRepos && userLocalStaredRepos) {\r\n      return {\r\n        userRepos: userLocalRepos,\r\n        userStaredRepos: userLocalStaredRepos,\r\n      };\r\n    }\r\n  }\r\n\r\n  // 发起请求，列出你所有的创建的仓库\r\n  const userRepos = await api.request({ url: \"/user/repos\" }, ctx.req, ctx.res);\r\n  // 被关注的仓库\r\n  const userStaredRepos = await api.request(\r\n    { url: \"/gists/starred\" },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n\r\n  return {\r\n    isLogin: true,\r\n    userRepos: userRepos.data,\r\n    userStaredRepos: userStaredRepos.data,\r\n  };\r\n};\r\n\r\n// 注意在写 withRouter 和 connect 的时候，需要把 withRouter 放在外面\r\nexport default withRouter(\r\n  connect(function mapState(state) {\r\n    return {\r\n      user: state.user,\r\n    };\r\n  })(Index)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}