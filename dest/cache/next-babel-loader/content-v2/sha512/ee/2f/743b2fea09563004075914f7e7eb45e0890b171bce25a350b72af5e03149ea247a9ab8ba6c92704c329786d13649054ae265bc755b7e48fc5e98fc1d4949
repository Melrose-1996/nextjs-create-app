{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\nextjs-create-app\\\\comonents\\\\Container.jsx\",\n    _this = this;\n\nimport { cloneElement } from 'react';\nvar style = {\n  width: '100%',\n  maxWidth: 1200,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  paddingLeft: 20,\n  paddingRight: 20\n}; // 版心\n\nexport default (function (_ref) {\n  var children = _ref.children,\n      _ref$renderer = _ref.renderer,\n      renderer = _ref$renderer === void 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 38\n  }, _this) : _ref$renderer;\n\n  /* 当传入的 props 是以小写字母开头的，当 babel 编译 react 的 jxs 语法的时候，如果标签的类型是小写字母开头的，就会认为是原生的标签（div,p），不会翻译成一个变量 */\n\n  /* 通过这种方式可以改变 Container 渲染的标签使用的组件类型的一种方式，却无法修改该组件需要的一些 props，就是当我们传入的是一个自己写的组件 */\n  return /*#__PURE__*/cloneElement(renderer, {\n    style: Object.assign({}, renderer.props.style, style),\n    children: children\n  }); // return <Comp style={style} children={ children}/>\n});","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/comonents/Container.jsx"],"names":["cloneElement","style","width","maxWidth","marginLeft","marginRight","paddingLeft","paddingRight","children","renderer","Object","assign","props"],"mappings":";;;;;AAAA,SAAQA,YAAR,QAA2B,OAA3B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,MADG;AAEVC,EAAAA,QAAQ,EAAE,IAFA;AAGVC,EAAAA,UAAU,EAAE,MAHF;AAIVC,EAAAA,WAAW,EAAE,MAJH;AAKVC,EAAAA,WAAW,EAAE,EALH;AAMVC,EAAAA,YAAY,EAAE;AANJ,CAAd,C,CASA;;AACA,gBAAe,gBAAoC;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,2BAAvBC,QAAuB;AAAA,MAAvBA,QAAuB,2CAAd;AAAA;AAAA;AAAA;AAAA,WAAc;;AAC/C;;AACA;AAGA,sBAAOT,YAAY,CAACS,QAAD,EAAW;AAC1BR,IAAAA,KAAK,EAACS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBF,QAAQ,CAACG,KAAT,CAAeX,KAAhC,EAAsCA,KAAtC,CADoB;AAE1BO,IAAAA,QAAQ,EAARA;AAF0B,GAAX,CAAnB,CAL+C,CAS/C;AACH,CAVD","sourcesContent":["import {cloneElement} from 'react'\r\n\r\nconst style = {\r\n    width: '100%',\r\n    maxWidth: 1200,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n}\r\n\r\n// 版心\r\nexport default ({ children, renderer=<div /> }) => {\r\n    /* 当传入的 props 是以小写字母开头的，当 babel 编译 react 的 jxs 语法的时候，如果标签的类型是小写字母开头的，就会认为是原生的标签（div,p），不会翻译成一个变量 */\r\n    /* 通过这种方式可以改变 Container 渲染的标签使用的组件类型的一种方式，却无法修改该组件需要的一些 props，就是当我们传入的是一个自己写的组件 */\r\n\r\n\r\n    return cloneElement(renderer, {\r\n        style:Object.assign({},renderer.props.style,style),\r\n        children\r\n    })\r\n    // return <Comp style={style} children={ children}/>\r\n}"]},"metadata":{},"sourceType":"module"}