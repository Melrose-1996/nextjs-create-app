{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/pc/Desktop/\\u6155\\u8BFE\\u5B66\\u4E60/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/pc/Desktop/\\u6155\\u8BFE\\u5B66\\u4E60/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\nextjs-create-app\\\\pages\\\\detail\\\\index.js\";\nimport withRepo from \"../../components/with-repo-basic.jsx\";\nimport MarkdownIt from 'markdown-it';\nimport api from \"../../lib/api\";\nvar md = new MarkdownIt();\n\nfunction Detail(_ref) {\n  var readme = _ref.readme;\n  // atob 注意在浏览器渲染的时候，window 是有这个方法的，但是在服务端渲染的时候 js 是没有这个方法的\n  // 需要兼容是需要 import 一个公共模块，使得服务端和客户端都可以使用这些公共的方法\n  console.log(atob(readme.content), \"++++++++++\");\n  var content = atob(readme.content);\n  var html = md.render(content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    },\n    children: \"Detail pages\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Detail;\n\nDetail.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _ctx$query, owner, name, readmeResp;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;\n            _context.next = 3;\n            return api.request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n            }, ctx.req, ctx.res);\n\n          case 3:\n            readmeResp = _context.sent;\n            return _context.abrupt(\"return\", {\n              readme: readmeResp.data\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRepo(Detail, \"index\"); // import Repo from \"../../components/Repo\";\n// import Link from \"next/link\";\n// import api from \"../../lib/api\";\n// import { withRouter } from \"next/router\";\n// // 这样我们把键值对的形式映射成了一个字符串\n// function makeQuery(queryObj) {\n//   // 遍历这个 obj\n//   const query = Object.entries(queryObj)\n//     .reduce((result, entry) => {\n//       result.push(entry.join(\"=\"));\n//       return result;\n//     }, [])\n//     .join(\"&\");\n//   return `?${query}`;\n// }\n// function Detail({ repoBasic, router }) {\n//   const query = makeQuery(router.query);\n//   return (\n//     <div className=\"root\">\n//       <div className=\"repo-basic\">\n//         <Repo repo={repoBasic} />\n//         <div className=\"tabs\">\n//           <Link href={`/detail${query}`}>\n//             <a className=\"tab index\">Readme</a>\n//           </Link>\n//           <Link href={`/detail/issues${query}`}>\n//             <a className=\"tab issues\">Issues</a>\n//           </Link>\n//         </div>\n//       </div>\n//       <div>Readme</div>\n//       <style jsx>{`\n//         .root {\n//           padding-top: 20px;\n//         }\n//         .repo-basic {\n//           padding: 20px;\n//           border: 1px solid #eee;\n//           margin-bottom: 20px;\n//           border-radius: 5px;\n//         }\n//         .tab + .tab {\n//           margin-left: 20px;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n// console.log(Detail.prop);\n// Detail.getInitialProps = async (ctx) => {\n//   console.log(ctx.query);\n//   const { owner, name } = ctx.query;\n//   //   return {\n//   //     name: \"melrose\",\n//   //   };\n//   // return new Promise((resolve) => {\n//   //   setTimeout(() => {\n//   //     resolve({});\n//   //   }, 3000);\n//   // });\n//   const repoBasic = await api.request(\n//     { url: `/repos/${owner}/${name}` },\n//     ctx.req,\n//     ctx.res\n//   );\n//   return {\n//     repoBasic: repoBasic.data,\n//   };\n// };\n// export default withRouter(Detail);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Detail\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/pages/detail/index.js"],"names":["withRepo","MarkdownIt","api","md","Detail","readme","console","log","atob","content","html","render","__html","getInitialProps","ctx","query","owner","name","request","url","req","res","readmeResp","data"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,sCAArB;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,IAAMC,EAAE,GAAG,IAAIF,UAAJ,EAAX;;AACA,SAASG,MAAT,OAA4B;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC1B;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACH,MAAM,CAACI,OAAR,CAAhB,EAAkC,YAAlC;AAEA,MAAMA,OAAO,GAAGD,IAAI,CAACH,MAAM,CAACI,OAAR,CAApB;AACA,MAAMC,IAAI,GAAGP,EAAE,CAACQ,MAAH,CAAUF,OAAV,CAAb;AAEA,sBAAO;AAAK,IAAA,uBAAuB,EAAE;AAACG,MAAAA,MAAM,EAACF;AAAR,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KATQN,M;;AAWTA,MAAM,CAACS,eAAP;AAAA,uEAAyB,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACCA,GAAG,CAACC,KADL,EACfC,KADe,cACfA,KADe,EACRC,IADQ,cACRA,IADQ;AAAA;AAAA,mBAGEf,GAAG,CAACgB,OAAJ,CACvB;AACEC,cAAAA,GAAG,mBAAYH,KAAZ,cAAqBC,IAArB;AADL,aADuB,EAIvBH,GAAG,CAACM,GAJmB,EAKvBN,GAAG,CAACO,GALmB,CAHF;;AAAA;AAGjBC,YAAAA,UAHiB;AAAA,6CAUhB;AACLjB,cAAAA,MAAM,EAAEiB,UAAU,CAACC;AADd,aAVgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAeA,qBAAevB,QAAQ,CAACI,MAAD,EAAS,OAAT,CAAvB,C,CAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import withRepo from \"../../components/with-repo-basic.jsx\";\r\n\r\nimport MarkdownIt from 'markdown-it'\r\n\r\nimport api from \"../../lib/api\";\r\n\r\nconst md = new MarkdownIt()\r\nfunction Detail({ readme }) {\r\n  // atob 注意在浏览器渲染的时候，window 是有这个方法的，但是在服务端渲染的时候 js 是没有这个方法的\r\n  // 需要兼容是需要 import 一个公共模块，使得服务端和客户端都可以使用这些公共的方法\r\n  console.log(atob(readme.content), \"++++++++++\");\r\n\r\n  const content = atob(readme.content)\r\n  const html = md.render(content)\r\n\r\n  return <div dangerouslySetInnerHTML={{__html:html}}>Detail pages</div>;\r\n}\r\n\r\nDetail.getInitialProps = async (ctx) => {\r\n  const { owner, name } = ctx.query;\r\n\r\n  const readmeResp = await api.request(\r\n    {\r\n      url: `/repos/${owner}/${name}/readme`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  return {\r\n    readme: readmeResp.data,\r\n  };\r\n};\r\n\r\nexport default withRepo(Detail, \"index\");\r\n\r\n// import Repo from \"../../components/Repo\";\r\n// import Link from \"next/link\";\r\n\r\n// import api from \"../../lib/api\";\r\n\r\n// import { withRouter } from \"next/router\";\r\n\r\n// // 这样我们把键值对的形式映射成了一个字符串\r\n// function makeQuery(queryObj) {\r\n//   // 遍历这个 obj\r\n//   const query = Object.entries(queryObj)\r\n//     .reduce((result, entry) => {\r\n//       result.push(entry.join(\"=\"));\r\n//       return result;\r\n//     }, [])\r\n//     .join(\"&\");\r\n//   return `?${query}`;\r\n// }\r\n\r\n// function Detail({ repoBasic, router }) {\r\n//   const query = makeQuery(router.query);\r\n//   return (\r\n//     <div className=\"root\">\r\n//       <div className=\"repo-basic\">\r\n//         <Repo repo={repoBasic} />\r\n//         <div className=\"tabs\">\r\n//           <Link href={`/detail${query}`}>\r\n//             <a className=\"tab index\">Readme</a>\r\n//           </Link>\r\n//           <Link href={`/detail/issues${query}`}>\r\n//             <a className=\"tab issues\">Issues</a>\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n//       <div>Readme</div>\r\n//       <style jsx>{`\r\n//         .root {\r\n//           padding-top: 20px;\r\n//         }\r\n//         .repo-basic {\r\n//           padding: 20px;\r\n//           border: 1px solid #eee;\r\n//           margin-bottom: 20px;\r\n//           border-radius: 5px;\r\n//         }\r\n//         .tab + .tab {\r\n//           margin-left: 20px;\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// console.log(Detail.prop);\r\n\r\n// Detail.getInitialProps = async (ctx) => {\r\n//   console.log(ctx.query);\r\n//   const { owner, name } = ctx.query;\r\n//   //   return {\r\n//   //     name: \"melrose\",\r\n//   //   };\r\n//   // return new Promise((resolve) => {\r\n//   //   setTimeout(() => {\r\n//   //     resolve({});\r\n//   //   }, 3000);\r\n//   // });\r\n//   const repoBasic = await api.request(\r\n//     { url: `/repos/${owner}/${name}` },\r\n//     ctx.req,\r\n//     ctx.res\r\n//   );\r\n//   return {\r\n//     repoBasic: repoBasic.data,\r\n//   };\r\n// };\r\n\r\n// export default withRouter(Detail);\r\n"]},"metadata":{},"sourceType":"module"}