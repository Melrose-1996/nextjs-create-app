{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\nextjs-create-app\\\\pages\\\\detail\\\\index.js\";\nimport withRepo from \"../../components/with-repo-basic.jsx\";\nimport api from \"../../lib/api\";\nimport MDRenderer from \"\";\n\nfunction Detail({\n  readme\n}) {\n  // atob 注意在浏览器渲染的时候，window 是有这个方法的，但是在服务端渲染的时候 js 是没有这个方法的\n  // 需要兼容是需要 import 一个公共模块，使得服务端和客户端都可以使用这些公共的方法\n  // console.log(atob(readme.content), \"++++++++++\");\n  const content = b64_to_utf8(readme.content);\n  const html = md.render(content); // 注意这个 div 里面不能写任何东西\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markdown-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\nDetail.getInitialProps = async ctx => {\n  const {\n    owner,\n    name\n  } = ctx.query;\n  const readmeResp = await api.request({\n    url: `/repos/${owner}/${name}/readme`\n  }, ctx.req, ctx.res);\n  return {\n    readme: readmeResp.data\n  };\n};\n\nexport default withRepo(Detail, \"index\"); // import Repo from \"../../components/Repo\";\n// import Link from \"next/link\";\n// import api from \"../../lib/api\";\n// import { withRouter } from \"next/router\";\n// // 这样我们把键值对的形式映射成了一个字符串\n// function makeQuery(queryObj) {\n//   // 遍历这个 obj\n//   const query = Object.entries(queryObj)\n//     .reduce((result, entry) => {\n//       result.push(entry.join(\"=\"));\n//       return result;\n//     }, [])\n//     .join(\"&\");\n//   return `?${query}`;\n// }\n// function Detail({ repoBasic, router }) {\n//   const query = makeQuery(router.query);\n//   return (\n//     <div className=\"root\">\n//       <div className=\"repo-basic\">\n//         <Repo repo={repoBasic} />\n//         <div className=\"tabs\">\n//           <Link href={`/detail${query}`}>\n//             <a className=\"tab index\">Readme</a>\n//           </Link>\n//           <Link href={`/detail/issues${query}`}>\n//             <a className=\"tab issues\">Issues</a>\n//           </Link>\n//         </div>\n//       </div>\n//       <div>Readme</div>\n//       <style jsx>{`\n//         .root {\n//           padding-top: 20px;\n//         }\n//         .repo-basic {\n//           padding: 20px;\n//           border: 1px solid #eee;\n//           margin-bottom: 20px;\n//           border-radius: 5px;\n//         }\n//         .tab + .tab {\n//           margin-left: 20px;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n// console.log(Detail.prop);\n// Detail.getInitialProps = async (ctx) => {\n//   console.log(ctx.query);\n//   const { owner, name } = ctx.query;\n//   //   return {\n//   //     name: \"melrose\",\n//   //   };\n//   // return new Promise((resolve) => {\n//   //   setTimeout(() => {\n//   //     resolve({});\n//   //   }, 3000);\n//   // });\n//   const repoBasic = await api.request(\n//     { url: `/repos/${owner}/${name}` },\n//     ctx.req,\n//     ctx.res\n//   );\n//   return {\n//     repoBasic: repoBasic.data,\n//   };\n// };\n// export default withRouter(Detail);","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/pages/detail/index.js"],"names":["withRepo","api","MDRenderer","Detail","readme","content","b64_to_utf8","html","md","render","__html","getInitialProps","ctx","owner","name","query","readmeResp","request","url","req","res","data"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,sCAArB;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,OAAOC,UAAP,MAAuB,EAAvB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA4B;AAC1B;AACA;AACA;AAEA,QAAMC,OAAO,GAAGC,WAAW,CAACF,MAAM,CAACC,OAAR,CAA3B;AACA,QAAME,IAAI,GAAGC,EAAE,CAACC,MAAH,CAAUJ,OAAV,CAAb,CAN0B,CAQ1B;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,uBAAuB,EAAE;AAAEK,QAAAA,MAAM,EAAEH;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAEDJ,MAAM,CAACQ,eAAP,GAAyB,MAAOC,GAAP,IAAe;AACtC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,GAAG,CAACG,KAA5B;AAEA,QAAMC,UAAU,GAAG,MAAMf,GAAG,CAACgB,OAAJ,CACvB;AACEC,IAAAA,GAAG,EAAG,UAASL,KAAM,IAAGC,IAAK;AAD/B,GADuB,EAIvBF,GAAG,CAACO,GAJmB,EAKvBP,GAAG,CAACQ,GALmB,CAAzB;AAOA,SAAO;AACLhB,IAAAA,MAAM,EAAEY,UAAU,CAACK;AADd,GAAP;AAGD,CAbD;;AAeA,eAAerB,QAAQ,CAACG,MAAD,EAAS,OAAT,CAAvB,C,CAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import withRepo from \"../../components/with-repo-basic.jsx\";\r\n\r\nimport api from \"../../lib/api\";\r\n\r\nimport MDRenderer from \"\";\r\n\r\nfunction Detail({ readme }) {\r\n  // atob 注意在浏览器渲染的时候，window 是有这个方法的，但是在服务端渲染的时候 js 是没有这个方法的\r\n  // 需要兼容是需要 import 一个公共模块，使得服务端和客户端都可以使用这些公共的方法\r\n  // console.log(atob(readme.content), \"++++++++++\");\r\n\r\n  const content = b64_to_utf8(readme.content);\r\n  const html = md.render(content);\r\n\r\n  // 注意这个 div 里面不能写任何东西\r\n  return (\r\n    <div className=\"markdown-body\">\r\n      <div dangerouslySetInnerHTML={{ __html: html }}></div>;\r\n    </div>\r\n  );\r\n}\r\n\r\nDetail.getInitialProps = async (ctx) => {\r\n  const { owner, name } = ctx.query;\r\n\r\n  const readmeResp = await api.request(\r\n    {\r\n      url: `/repos/${owner}/${name}/readme`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n  return {\r\n    readme: readmeResp.data,\r\n  };\r\n};\r\n\r\nexport default withRepo(Detail, \"index\");\r\n\r\n// import Repo from \"../../components/Repo\";\r\n// import Link from \"next/link\";\r\n\r\n// import api from \"../../lib/api\";\r\n\r\n// import { withRouter } from \"next/router\";\r\n\r\n// // 这样我们把键值对的形式映射成了一个字符串\r\n// function makeQuery(queryObj) {\r\n//   // 遍历这个 obj\r\n//   const query = Object.entries(queryObj)\r\n//     .reduce((result, entry) => {\r\n//       result.push(entry.join(\"=\"));\r\n//       return result;\r\n//     }, [])\r\n//     .join(\"&\");\r\n//   return `?${query}`;\r\n// }\r\n\r\n// function Detail({ repoBasic, router }) {\r\n//   const query = makeQuery(router.query);\r\n//   return (\r\n//     <div className=\"root\">\r\n//       <div className=\"repo-basic\">\r\n//         <Repo repo={repoBasic} />\r\n//         <div className=\"tabs\">\r\n//           <Link href={`/detail${query}`}>\r\n//             <a className=\"tab index\">Readme</a>\r\n//           </Link>\r\n//           <Link href={`/detail/issues${query}`}>\r\n//             <a className=\"tab issues\">Issues</a>\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n//       <div>Readme</div>\r\n//       <style jsx>{`\r\n//         .root {\r\n//           padding-top: 20px;\r\n//         }\r\n//         .repo-basic {\r\n//           padding: 20px;\r\n//           border: 1px solid #eee;\r\n//           margin-bottom: 20px;\r\n//           border-radius: 5px;\r\n//         }\r\n//         .tab + .tab {\r\n//           margin-left: 20px;\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// console.log(Detail.prop);\r\n\r\n// Detail.getInitialProps = async (ctx) => {\r\n//   console.log(ctx.query);\r\n//   const { owner, name } = ctx.query;\r\n//   //   return {\r\n//   //     name: \"melrose\",\r\n//   //   };\r\n//   // return new Promise((resolve) => {\r\n//   //   setTimeout(() => {\r\n//   //     resolve({});\r\n//   //   }, 3000);\r\n//   // });\r\n//   const repoBasic = await api.request(\r\n//     { url: `/repos/${owner}/${name}` },\r\n//     ctx.req,\r\n//     ctx.res\r\n//   );\r\n//   return {\r\n//     repoBasic: repoBasic.data,\r\n//   };\r\n// };\r\n\r\n// export default withRouter(Detail);\r\n"]},"metadata":{},"sourceType":"module"}