{"ast":null,"code":"import _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _Row from \"antd/lib/row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\lls\\\\chenzhengquan\\\\Desktop\\\\muke-study\\\\nextjs-create-app\\\\pages\\\\search.js\";\nimport { withRouter } from \"next/router\";\n\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\nconst api = require(\"../lib/api\"); // 搜索条件\n\n\nconst LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\nconst SORT_TYPE = [{\n  name: \"Best Match\"\n}, {\n  name: \"Most Stars\",\n  value: \"stars\",\n  order: \"desc\"\n}, {\n  name: \"Fewest Stars\",\n  value: \"stars\",\n  order: \"asc\"\n}, {\n  name: \"Most Forks\",\n  value: \"forks\",\n  order: \"desc\"\n}, {\n  name: \"Fewest Stars\",\n  value: \"forks\",\n  order: \"asc\"\n}];\n\nfunction Search({\n  router,\n  repos\n}) {\n  console.log(repos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(_Row, {\n      gutter: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Col, {\n      gutter: 6,\n      children: /*#__PURE__*/_jsxDEV(_List, {\n        bordered: true,\n        header: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"list-header\",\n          children: \"\\u8BED\\u8A00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\nSearch.getInitialProps = async ctx => {\n  console.log(ctx, 11111);\n  const {\n    query,\n    sort,\n    lang,\n    order,\n    page\n  } = ctx.query;\n\n  if (!query) {\n    return {\n      repos: {\n        total_count: 0\n      }\n    };\n  }\n\n  let queryString = `?q=${query}`;\n  if (lang) queryString += `+language:${lang}`;\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\n  if (page) queryString += `&page=${page}`;\n  const result = await api.request({\n    url: `/search/repositories${queryString}`\n  }, ctx.req, ctx.res);\n  return {\n    repos: result.data\n  };\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["D:/lls/chenzhengquan/Desktop/muke-study/nextjs-create-app/pages/search.js"],"names":["withRouter","api","require","LANGUAGES","SORT_TYPE","name","value","order","Search","router","repos","console","log","getInitialProps","ctx","query","sort","lang","page","total_count","queryString","result","request","url","req","res","data"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB,C,CAEA;;;AACA,MAAMC,SAAS,GAAG,CAAC,YAAD,EAAe,MAAf,EAAuB,KAAvB,EAA8B,YAA9B,EAA4C,MAA5C,EAAoD,MAApD,CAAlB;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADgB,EAEhB;AAAEA,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAFgB,EAGhB;AAAEF,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE,OAA/B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAHgB,EAIhB;AAAEF,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAJgB,EAKhB;AAAEF,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE,OAA/B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CALgB,CAAlB;;AAQA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAhB,EAAmC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,MAAM,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,MAAM,EAAE,CAAb;AAAA,6BACE;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,MAAM,eAAE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAEDF,MAAM,CAACK,eAAP,GAAyB,MAAOC,GAAP,IAAe;AACtCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiB,KAAjB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,IAAf;AAAqBV,IAAAA,KAArB;AAA4BW,IAAAA;AAA5B,MAAqCJ,GAAG,CAACC,KAA/C;;AACA,MAAI,CAACA,KAAL,EAAY;AACV,WAAO;AACLL,MAAAA,KAAK,EAAE;AACLS,QAAAA,WAAW,EAAE;AADR;AADF,KAAP;AAKD;;AACD,MAAIC,WAAW,GAAI,MAAKL,KAAM,EAA9B;AACA,MAAIE,IAAJ,EAAUG,WAAW,IAAK,aAAYH,IAAK,EAAjC;AACV,MAAID,IAAJ,EAAUI,WAAW,IAAK,SAAQJ,IAAK,UAAST,KAAK,IAAI,MAAO,EAAtD;AACV,MAAIW,IAAJ,EAAUE,WAAW,IAAK,SAAQF,IAAK,EAA7B;AACV,QAAMG,MAAM,GAAG,MAAMpB,GAAG,CAACqB,OAAJ,CACnB;AACEC,IAAAA,GAAG,EAAG,uBAAsBH,WAAY;AAD1C,GADmB,EAInBN,GAAG,CAACU,GAJe,EAKnBV,GAAG,CAACW,GALe,CAArB;AAQA,SAAO;AACLf,IAAAA,KAAK,EAAEW,MAAM,CAACK;AADT,GAAP;AAGD,CAzBD;;AA2BA,eAAe1B,UAAU,CAACQ,MAAD,CAAzB","sourcesContent":["import { withRouter } from \"next/router\";\r\n\r\nimport { Row, Col, List } from \"antd\";\r\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\r\n\r\nconst api = require(\"../lib/api\");\r\n\r\n// 搜索条件\r\nconst LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\r\n\r\nconst SORT_TYPE = [\r\n  { name: \"Best Match\" },\r\n  { name: \"Most Stars\", value: \"stars\", order: \"desc\" },\r\n  { name: \"Fewest Stars\", value: \"stars\", order: \"asc\" },\r\n  { name: \"Most Forks\", value: \"forks\", order: \"desc\" },\r\n  { name: \"Fewest Stars\", value: \"forks\", order: \"asc\" },\r\n];\r\n\r\nfunction Search({ router, repos }) {\r\n  console.log(repos);\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}></Row>\r\n      <Col gutter={6}>\r\n        <List\r\n          bordered\r\n          header={<span className=\"list-header\">语言</span>}\r\n        ></List>\r\n      </Col>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearch.getInitialProps = async (ctx) => {\r\n  console.log(ctx, 11111);\r\n  const { query, sort, lang, order, page } = ctx.query;\r\n  if (!query) {\r\n    return {\r\n      repos: {\r\n        total_count: 0,\r\n      },\r\n    };\r\n  }\r\n  let queryString = `?q=${query}`;\r\n  if (lang) queryString += `+language:${lang}`;\r\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\r\n  if (page) queryString += `&page=${page}`;\r\n  const result = await api.request(\r\n    {\r\n      url: `/search/repositories${queryString}`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n\r\n  return {\r\n    repos: result.data,\r\n  };\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}