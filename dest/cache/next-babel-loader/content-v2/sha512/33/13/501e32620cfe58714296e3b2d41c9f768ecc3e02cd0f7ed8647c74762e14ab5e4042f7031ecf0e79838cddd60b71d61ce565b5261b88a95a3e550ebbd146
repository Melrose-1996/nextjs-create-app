{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\nextjs-create-app\\\\pages\\\\search.js\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useCallback, memo, isValidElement } from \"react\";\nimport { withRouter } from \"next/router\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\n\nconst api = require(\"../lib/api\");\n\nimport Repo from \"../components/Repo\"; // 搜索条件\n\nconst LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\nconst SORT_TYPE = [{\n  name: \"Best Match\"\n}, {\n  name: \"Most Stars\",\n  value: \"stars\",\n  order: \"desc\"\n}, {\n  name: \"Fewest Stars\",\n  value: \"stars\",\n  order: \"asc\"\n}, {\n  name: \"Most Forks\",\n  value: \"forks\",\n  order: \"desc\"\n}, {\n  name: \"Fewest Stars\",\n  value: \"forks\",\n  order: \"asc\"\n}];\nconst selectedItemStyle = {\n  borderLeft: \"2px solid #e36209\",\n  fontWeight: 100\n}; // 这是一个纯粹的方法，方法一旦声明，不存在任何副作用\n// const doSearch = useCallback((config) => {\n//   Router.push({\n//     pathname: \"/search\",\n//     query: config,\n//   });\n// }, []);\n// react 是一个组件化的框架，组件依靠 props 和 states 进行运行的，如果能够抽象成 props 那么就可以重新申明一个组件，让组件帮忙使用，在代码维护变得更加简单\n// 防止了组件在点击的过程中重新声明渲染\n// FilterLink 组件是纯粹根据 props 进行更新的，可以 memo 进行优化，当 props 没有进行变化的时候，这个组件不会被重新渲染\n\nconst per_page = 20;\nconst FilterLink = /*#__PURE__*/memo(({\n  name,\n  query,\n  lang,\n  sort,\n  order,\n  page\n}) => {\n  let queryString = `?query=${query}`;\n  if (lang) queryString += `&lang=${lang}`;\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\n  if (page) queryString += `&page=${page}`;\n  queryString += `&per_page=${per_page}`; // if (page) queryString += `&page=${page}`;\n  // const doSearch = (config) => {\n  //   Router.push({\n  //     pathname: \"/search\",\n  //     query: {\n  //       query,\n  //       lang,\n  //       sort,\n  //       order,\n  //     },\n  //   });\n  // };\n  // 注意 a 标签不放链接，很难去做 SEO ，因为 SEO 会解析 HTML 的内容\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: `/search${queryString}`,\n    children: /*#__PURE__*/isValidElement(name) ? name : /*#__PURE__*/_jsxDEV(\"a\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n});\n\nconst noop = () => {};\n\nfunction Search({\n  router,\n  repos\n}) {\n  // 注意这些数据都没有在 state 里面去创建，希望是这些页面显示的内容完全根据 url 来定的，使得整个组件是个受控的组件，不会产生任何的副作用。\n  // 该路由是 withRouter 传递过来的\n  const querys = Object.assign({}, router.query);\n  const {\n    sort,\n    order,\n    lang,\n    page\n  } = router.query; // 用于拼接路径的方法\n  // 注意语言变化了，但是当时选中了一个排序方式，在语言变化的时候，不应该变化其排序，所以要把排序的参数放在 query 里面。\n  // const handleLanguageChange = (language) => {\n  //   Router.push({\n  //     pathname: \"/search\",\n  //     query: {\n  //       query,\n  //       lang: language,\n  //       sort,\n  //       order,\n  //     },\n  //   });\n  // };\n  // const handleSortChange = (sort) => {\n  //   Router.push({\n  //     pathname: \"/search\",\n  //     query: {\n  //       query,\n  //       lang,\n  //       sort: sort.value,\n  //       order: sort.order,\n  //     },\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-118147758\" + \" \" + \"root\",\n    children: [/*#__PURE__*/_jsxDEV(_Row, {\n      gutter: 20,\n      children: [/*#__PURE__*/_jsxDEV(_Col, {\n        gutter: 6,\n        children: [/*#__PURE__*/_jsxDEV(_List, {\n          bordered: true,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-118147758\" + \" \" + \"list-header\",\n            children: \"\\u8BED\\u8A00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this),\n          style: {\n            marginBottom: 20\n          },\n          dataSource: LANGUAGES,\n          renderItem: item => {\n            const selected = lang === item;\n            return /*#__PURE__*/_jsxDEV(_List.Item, {\n              style: selected ? selectedItemStyle : null,\n              children: selected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"jsx-118147758\",\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, querys), {}, {\n                lang: item,\n                name: item\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_List, {\n          bordered: true,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-118147758\" + \" \" + \"list-header\",\n            children: \"\\u6392\\u5E8F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this),\n          style: {\n            marginBottom: 20\n          },\n          dataSource: SORT_TYPE,\n          renderItem: item => {\n            let selected = false;\n\n            if (item.name === \"Best Match\" && !sort) {\n              selected = true;\n            } else if (item.value === sort && item.order === order) {\n              selected = true;\n            }\n\n            return /*#__PURE__*/_jsxDEV(_List.Item, {\n              style: selected ? selectedItemStyle : null,\n              children: selected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"jsx-118147758\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, querys), {}, {\n                sort: item.value,\n                order: item.order,\n                name: item.name\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Col, {\n        span: 18,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"jsx-118147758\" + \" \" + \"repos-title\",\n          children: [repos.total_count, \" \\u4E2A\\u4ED3\\u5E93\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), repos.items.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n          repo: repo\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-118147758\" + \" \" + \"pagination\",\n          children: /*#__PURE__*/_jsxDEV(_Pagination, {\n            pageSize: per_page,\n            current: Number(page) || 1,\n            total: repos.total_count,\n            onChange: noop,\n            itemRender: (page, type, ol) => {\n              const p = type === \"page\" ? page : type === \"prev\" ? page - 1 : page + 1;\n              const name = type === \"page\" ? page : ol;\n              return /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, querys), {}, {\n                page: p,\n                name: name\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 24\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"118147758\",\n      children: \".root.jsx-118147758{padding:20px 0;}.list-header.jsx-118147758{font-weight:800;font-size:16px;}.repos-title.jsx-118147758{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXOaFleivvuWtpuS5oFxcbmV4dGpzLWNyZWF0ZS1hcHBcXHBhZ2VzXFxzZWFyY2guanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ05rQixBQUcwQixBQUdDLEFBSWEsZUFOL0IsQ0FHaUIsYUFJQSxFQUhqQixhQUltQixpQkFDbkIiLCJmaWxlIjoiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxc5oWV6K++5a2m5LmgXFxuZXh0anMtY3JlYXRlLWFwcFxccGFnZXNcXHNlYXJjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCBtZW1vLCBpc1ZhbGlkRWxlbWVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xyXG5cclxuaW1wb3J0IHsgUm93LCBDb2wsIExpc3QsIFBhZ2luYXRpb24gfSBmcm9tIFwiYW50ZFwiO1xyXG5cclxuaW1wb3J0IFJvdXRlciBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcclxuXHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuLyoqXHJcbiAqIHNvcnQ6IOaOkuW6j+aWueW8j1xyXG4gKiBvcmRlcjog5o6S5bqP6aG65bqPXHJcbiAqIGxhbmc6IOS7k+W6k+eahOmhueebruW8gOWPkeS4u+ivreiogFxyXG4gKiBwYWdlOiDliIbpobXpobXpnaJcclxuICpcclxuICovXHJcblxyXG5jb25zdCBhcGkgPSByZXF1aXJlKFwiLi4vbGliL2FwaVwiKTtcclxuXHJcbmltcG9ydCBSZXBvIGZyb20gXCIuLi9jb21wb25lbnRzL1JlcG9cIjtcclxuXHJcbi8vIOaQnOe0ouadoeS7tlxyXG5jb25zdCBMQU5HVUFHRVMgPSBbXCJKYXZhU2NyaXB0XCIsIFwiSFRNTFwiLCBcIkNTU1wiLCBcIlR5cGVTY3JpcHRcIiwgXCJKYXZhXCIsIFwiUnVzdFwiXTtcclxuXHJcbmNvbnN0IFNPUlRfVFlQRSA9IFtcclxuICB7IG5hbWU6IFwiQmVzdCBNYXRjaFwiIH0sXHJcbiAgeyBuYW1lOiBcIk1vc3QgU3RhcnNcIiwgdmFsdWU6IFwic3RhcnNcIiwgb3JkZXI6IFwiZGVzY1wiIH0sXHJcbiAgeyBuYW1lOiBcIkZld2VzdCBTdGFyc1wiLCB2YWx1ZTogXCJzdGFyc1wiLCBvcmRlcjogXCJhc2NcIiB9LFxyXG4gIHsgbmFtZTogXCJNb3N0IEZvcmtzXCIsIHZhbHVlOiBcImZvcmtzXCIsIG9yZGVyOiBcImRlc2NcIiB9LFxyXG4gIHsgbmFtZTogXCJGZXdlc3QgU3RhcnNcIiwgdmFsdWU6IFwiZm9ya3NcIiwgb3JkZXI6IFwiYXNjXCIgfSxcclxuXTtcclxuXHJcbmNvbnN0IHNlbGVjdGVkSXRlbVN0eWxlID0ge1xyXG4gIGJvcmRlckxlZnQ6IFwiMnB4IHNvbGlkICNlMzYyMDlcIixcclxuICBmb250V2VpZ2h0OiAxMDAsXHJcbn07XHJcblxyXG4vLyDov5nmmK/kuIDkuKrnuq/nsrnnmoTmlrnms5XvvIzmlrnms5XkuIDml6blo7DmmI7vvIzkuI3lrZjlnKjku7vkvZXlia/kvZznlKhcclxuLy8gY29uc3QgZG9TZWFyY2ggPSB1c2VDYWxsYmFjaygoY29uZmlnKSA9PiB7XHJcbi8vICAgUm91dGVyLnB1c2goe1xyXG4vLyAgICAgcGF0aG5hbWU6IFwiL3NlYXJjaFwiLFxyXG4vLyAgICAgcXVlcnk6IGNvbmZpZyxcclxuLy8gICB9KTtcclxuLy8gfSwgW10pO1xyXG5cclxuLy8gcmVhY3Qg5piv5LiA5Liq57uE5Lu25YyW55qE5qGG5p6277yM57uE5Lu25L6d6Z2gIHByb3BzIOWSjCBzdGF0ZXMg6L+b6KGM6L+Q6KGM55qE77yM5aaC5p6c6IO95aSf5oq96LGh5oiQIHByb3BzIOmCo+S5iOWwseWPr+S7pemHjeaWsOeUs+aYjuS4gOS4que7hOS7tu+8jOiuqee7hOS7tuW4ruW/meS9v+eUqO+8jOWcqOS7o+eggee7tOaKpOWPmOW+l+abtOWKoOeugOWNlVxyXG4vLyDpmLLmraLkuobnu4Tku7blnKjngrnlh7vnmoTov4fnqIvkuK3ph43mlrDlo7DmmI7muLLmn5NcclxuLy8gRmlsdGVyTGluayDnu4Tku7bmmK/nuq/nsrnmoLnmja4gcHJvcHMg6L+b6KGM5pu05paw55qE77yM5Y+v5LulIG1lbW8g6L+b6KGM5LyY5YyW77yM5b2TIHByb3BzIOayoeaciei/m+ihjOWPmOWMlueahOaXtuWAme+8jOi/meS4que7hOS7tuS4jeS8muiiq+mHjeaWsOa4suafk1xyXG5cclxuY29uc3QgcGVyX3BhZ2UgPSAyMDtcclxuY29uc3QgRmlsdGVyTGluayA9IG1lbW8oKHsgbmFtZSwgcXVlcnksIGxhbmcsIHNvcnQsIG9yZGVyLCBwYWdlIH0pID0+IHtcclxuICBsZXQgcXVlcnlTdHJpbmcgPSBgP3F1ZXJ5PSR7cXVlcnl9YDtcclxuICBpZiAobGFuZykgcXVlcnlTdHJpbmcgKz0gYCZsYW5nPSR7bGFuZ31gO1xyXG4gIGlmIChzb3J0KSBxdWVyeVN0cmluZyArPSBgJnNvcnQ9JHtzb3J0fSZvcmRlcj0ke29yZGVyIHx8IFwiZGVzY1wifWA7XHJcbiAgaWYgKHBhZ2UpIHF1ZXJ5U3RyaW5nICs9IGAmcGFnZT0ke3BhZ2V9YDtcclxuXHJcbiAgcXVlcnlTdHJpbmcgKz0gYCZwZXJfcGFnZT0ke3Blcl9wYWdlfWA7XHJcbiAgLy8gaWYgKHBhZ2UpIHF1ZXJ5U3RyaW5nICs9IGAmcGFnZT0ke3BhZ2V9YDtcclxuXHJcbiAgLy8gY29uc3QgZG9TZWFyY2ggPSAoY29uZmlnKSA9PiB7XHJcbiAgLy8gICBSb3V0ZXIucHVzaCh7XHJcbiAgLy8gICAgIHBhdGhuYW1lOiBcIi9zZWFyY2hcIixcclxuICAvLyAgICAgcXVlcnk6IHtcclxuICAvLyAgICAgICBxdWVyeSxcclxuICAvLyAgICAgICBsYW5nLFxyXG4gIC8vICAgICAgIHNvcnQsXHJcbiAgLy8gICAgICAgb3JkZXIsXHJcbiAgLy8gICAgIH0sXHJcbiAgLy8gICB9KTtcclxuICAvLyB9O1xyXG4gIC8vIOazqOaEjyBhIOagh+etvuS4jeaUvumTvuaOpe+8jOW+iOmavuWOu+WBmiBTRU8g77yM5Zug5Li6IFNFTyDkvJrop6PmnpAgSFRNTCDnmoTlhoXlrrlcclxuICByZXR1cm4gKFxyXG4gICAgPExpbmsgaHJlZj17YC9zZWFyY2gke3F1ZXJ5U3RyaW5nfWB9PlxyXG4gICAgICB7LyogaXNWYWxpZEVsZW1lbnQg5piv55So5p2l5Yik5pat5piv5ZCm5Li65LiA5Liq5qCH562+ICovfVxyXG4gICAgICB7aXNWYWxpZEVsZW1lbnQobmFtZSkgPyBuYW1lIDogPGE+e25hbWV9PC9hPn1cclxuICAgIDwvTGluaz5cclxuICApO1xyXG59KTtcclxuXHJcbmNvbnN0IG5vb3AgPSAoKSA9PiB7fTtcclxuXHJcbmZ1bmN0aW9uIFNlYXJjaCh7IHJvdXRlciwgcmVwb3MgfSkge1xyXG4gIC8vIOazqOaEj+i/meS6m+aVsOaNrumDveayoeacieWcqCBzdGF0ZSDph4zpnaLljrvliJvlu7rvvIzluIzmnJvmmK/ov5nkupvpobXpnaLmmL7npLrnmoTlhoXlrrnlrozlhajmoLnmja4gdXJsIOadpeWumueahO+8jOS9v+W+l+aVtOS4que7hOS7tuaYr+S4quWPl+aOp+eahOe7hOS7tu+8jOS4jeS8muS6p+eUn+S7u+S9leeahOWJr+S9nOeUqOOAglxyXG5cclxuICAvLyDor6Xot6/nlLHmmK8gd2l0aFJvdXRlciDkvKDpgJLov4fmnaXnmoRcclxuICBjb25zdCB7IC4uLnF1ZXJ5cyB9ID0gcm91dGVyLnF1ZXJ5O1xyXG4gIGNvbnN0IHsgc29ydCwgb3JkZXIsIGxhbmcsIHBhZ2UgfSA9IHJvdXRlci5xdWVyeTtcclxuXHJcbiAgLy8g55So5LqO5ou85o6l6Lev5b6E55qE5pa55rOVXHJcbiAgLy8g5rOo5oSP6K+t6KiA5Y+Y5YyW5LqG77yM5L2G5piv5b2T5pe26YCJ5Lit5LqG5LiA5Liq5o6S5bqP5pa55byP77yM5Zyo6K+t6KiA5Y+Y5YyW55qE5pe25YCZ77yM5LiN5bqU6K+l5Y+Y5YyW5YW25o6S5bqP77yM5omA5Lul6KaB5oqK5o6S5bqP55qE5Y+C5pWw5pS+5ZyoIHF1ZXJ5IOmHjOmdouOAglxyXG4gIC8vIGNvbnN0IGhhbmRsZUxhbmd1YWdlQ2hhbmdlID0gKGxhbmd1YWdlKSA9PiB7XHJcbiAgLy8gICBSb3V0ZXIucHVzaCh7XHJcbiAgLy8gICAgIHBhdGhuYW1lOiBcIi9zZWFyY2hcIixcclxuICAvLyAgICAgcXVlcnk6IHtcclxuICAvLyAgICAgICBxdWVyeSxcclxuICAvLyAgICAgICBsYW5nOiBsYW5ndWFnZSxcclxuICAvLyAgICAgICBzb3J0LFxyXG4gIC8vICAgICAgIG9yZGVyLFxyXG4gIC8vICAgICB9LFxyXG4gIC8vICAgfSk7XHJcbiAgLy8gfTtcclxuICAvLyBjb25zdCBoYW5kbGVTb3J0Q2hhbmdlID0gKHNvcnQpID0+IHtcclxuICAvLyAgIFJvdXRlci5wdXNoKHtcclxuICAvLyAgICAgcGF0aG5hbWU6IFwiL3NlYXJjaFwiLFxyXG4gIC8vICAgICBxdWVyeToge1xyXG4gIC8vICAgICAgIHF1ZXJ5LFxyXG4gIC8vICAgICAgIGxhbmcsXHJcbiAgLy8gICAgICAgc29ydDogc29ydC52YWx1ZSxcclxuICAvLyAgICAgICBvcmRlcjogc29ydC5vcmRlcixcclxuICAvLyAgICAgfSxcclxuICAvLyAgIH0pO1xyXG4gIC8vIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInJvb3RcIj5cclxuICAgICAgPFJvdyBndXR0ZXI9ezIwfT5cclxuICAgICAgICA8Q29sIGd1dHRlcj17Nn0+XHJcbiAgICAgICAgICA8TGlzdFxyXG4gICAgICAgICAgICBib3JkZXJlZFxyXG4gICAgICAgICAgICBoZWFkZXI9ezxzcGFuIGNsYXNzTmFtZT1cImxpc3QtaGVhZGVyXCI+6K+t6KiAPC9zcGFuPn1cclxuICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAyMCB9fVxyXG4gICAgICAgICAgICBkYXRhU291cmNlPXtMQU5HVUFHRVN9XHJcbiAgICAgICAgICAgIHJlbmRlckl0ZW09eyhpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWQgPSBsYW5nID09PSBpdGVtO1xyXG4gICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8TGlzdC5JdGVtIHN0eWxlPXtzZWxlY3RlZCA/IHNlbGVjdGVkSXRlbVN0eWxlIDogbnVsbH0+XHJcbiAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZCA/IChcclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj57aXRlbX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgPEZpbHRlckxpbmsgey4uLnF1ZXJ5c30gbGFuZz17aXRlbX0gbmFtZT17aXRlbX0gLz5cclxuICAgICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICAgICAgey8qIDxhXHJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gZG9TZWFyY2goeyBzb3J0LCBvcmRlciwgcXVlcnksIGxhbmc6IGl0ZW0gfSl9XHJcbiAgICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICB7aXRlbX1cclxuICAgICAgICAgICAgICAgICAgPC9hPiAqL31cclxuICAgICAgICAgICAgICAgIDwvTGlzdC5JdGVtPlxyXG4gICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPExpc3RcclxuICAgICAgICAgICAgYm9yZGVyZWRcclxuICAgICAgICAgICAgaGVhZGVyPXs8c3BhbiBjbGFzc05hbWU9XCJsaXN0LWhlYWRlclwiPuaOkuW6jzwvc3Bhbj59XHJcbiAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogMjAgfX1cclxuICAgICAgICAgICAgZGF0YVNvdXJjZT17U09SVF9UWVBFfVxyXG4gICAgICAgICAgICByZW5kZXJJdGVtPXsoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAgIGxldCBzZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIGlmIChpdGVtLm5hbWUgPT09IFwiQmVzdCBNYXRjaFwiICYmICFzb3J0KSB7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLnZhbHVlID09PSBzb3J0ICYmIGl0ZW0ub3JkZXIgPT09IG9yZGVyKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICA8TGlzdC5JdGVtIHN0eWxlPXtzZWxlY3RlZCA/IHNlbGVjdGVkSXRlbVN0eWxlIDogbnVsbH0+XHJcbiAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZCA/IChcclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj57aXRlbS5uYW1lfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICA8RmlsdGVyTGlua1xyXG4gICAgICAgICAgICAgICAgICAgICAgey4uLnF1ZXJ5c31cclxuICAgICAgICAgICAgICAgICAgICAgIHNvcnQ9e2l0ZW0udmFsdWV9XHJcbiAgICAgICAgICAgICAgICAgICAgICBvcmRlcj17aXRlbS5vcmRlcn1cclxuICAgICAgICAgICAgICAgICAgICAgIG5hbWU9e2l0ZW0ubmFtZX1cclxuICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICApfVxyXG5cclxuICAgICAgICAgICAgICAgICAgey8qIDxhXHJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT5cclxuICAgICAgICAgICAgICAgICAgICAgIGRvU2VhcmNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc29ydDogaXRlbS52YWx1ZSB8fCBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogaXRlbS5vcmRlciB8fCBcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGFuZyxcclxuICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAge2l0ZW0ubmFtZX1cclxuICAgICAgICAgICAgICAgICAgPC9hPiAqL31cclxuICAgICAgICAgICAgICAgIDwvTGlzdC5JdGVtPlxyXG4gICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvQ29sPlxyXG4gICAgICAgIDxDb2wgc3Bhbj17MTh9PlxyXG4gICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInJlcG9zLXRpdGxlXCI+e3JlcG9zLnRvdGFsX2NvdW50fSDkuKrku5PlupM8L2gzPlxyXG4gICAgICAgICAge3JlcG9zLml0ZW1zLm1hcCgocmVwbykgPT4gKFxyXG4gICAgICAgICAgICA8UmVwbyByZXBvPXtyZXBvfSBrZXk9e3JlcG8uaWR9IC8+XHJcbiAgICAgICAgICApKX1cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFnaW5hdGlvblwiPlxyXG4gICAgICAgICAgICB7LyogaXRlbVJlbmRlciDlsLHmmK/miJHku6zmr4/kuKogaXRlbSDmmL7npLrnmoTlhoXlrrnvvIxpdGVtUmVuZGVyIOWwseaYr+avj+S4qiBwYWdlIOWvueW6lOeahOmhteegge+8jHR5cGUg5bCx5piv6L+Z5Liq5YiG6aG15ZCR5YmN6L+Y5piv5ZCR5ZCO6L+Y5piv5Lit6Ze055qE5oyJ6ZKu77yMb2wg5bCx5piv57G75Ly85LqOIGljb24g77yM5rOo5oSPIHBhZ2Ug77yMIHR5cGUg6YO95pivIGEg5qCH562+ICAqL31cclxuICAgICAgICAgICAgPFBhZ2luYXRpb25cclxuICAgICAgICAgICAgICBwYWdlU2l6ZT17cGVyX3BhZ2V9XHJcbiAgICAgICAgICAgICAgY3VycmVudD17TnVtYmVyKHBhZ2UpIHx8IDF9XHJcbiAgICAgICAgICAgICAgdG90YWw9e3JlcG9zLnRvdGFsX2NvdW50fVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtub29wfVxyXG4gICAgICAgICAgICAgIGl0ZW1SZW5kZXI9eyhwYWdlLCB0eXBlLCBvbCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcCA9XHJcbiAgICAgICAgICAgICAgICAgIHR5cGUgPT09IFwicGFnZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgPyBwYWdlXHJcbiAgICAgICAgICAgICAgICAgICAgOiB0eXBlID09PSBcInByZXZcIlxyXG4gICAgICAgICAgICAgICAgICAgID8gcGFnZSAtIDFcclxuICAgICAgICAgICAgICAgICAgICA6IHBhZ2UgKyAxO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IHR5cGUgPT09IFwicGFnZVwiID8gcGFnZSA6IG9sO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDxGaWx0ZXJMaW5rIHsuLi5xdWVyeXN9IHBhZ2U9e3B9IG5hbWU9e25hbWV9IC8+O1xyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L0NvbD5cclxuICAgICAgPC9Sb3c+XHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAucm9vdCB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAyMHB4IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5saXN0LWhlYWRlciB7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogODAwO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAucmVwb3MtdGl0bGUge1xyXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7XHJcbiAgICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogNTBweDtcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuXHJcblNlYXJjaC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoY3R4KSA9PiB7XHJcbiAgY29uc3QgeyBxdWVyeSwgc29ydCwgbGFuZywgb3JkZXIsIHBhZ2UgfSA9IGN0eC5xdWVyeTtcclxuICBpZiAoIXF1ZXJ5KSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXBvczoge1xyXG4gICAgICAgIHRvdGFsX2NvdW50OiAwLFxyXG4gICAgICB9LFxyXG4gICAgfTtcclxuICB9XHJcbiAgbGV0IHF1ZXJ5U3RyaW5nID0gYD9xPSR7cXVlcnl9YDtcclxuICBpZiAobGFuZykgcXVlcnlTdHJpbmcgKz0gYCtsYW5ndWFnZToke2xhbmd9YDtcclxuICBpZiAoc29ydCkgcXVlcnlTdHJpbmcgKz0gYCZzb3J0PSR7c29ydH0mb3JkZXI9JHtvcmRlciB8fCBcImRlc2NcIn1gO1xyXG4gIGlmIChwYWdlKSBxdWVyeVN0cmluZyArPSBgJnBhZ2U9JHtwYWdlfWA7XHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYXBpLnJlcXVlc3QoXHJcbiAgICB7XHJcbiAgICAgIHVybDogYC9zZWFyY2gvcmVwb3NpdG9yaWVzJHtxdWVyeVN0cmluZ31gLFxyXG4gICAgfSxcclxuICAgIGN0eC5yZXEsXHJcbiAgICBjdHgucmVzXHJcbiAgKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHJlcG9zOiByZXN1bHQuZGF0YSxcclxuICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihTZWFyY2gpO1xyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\pc\\\\\\\\Desktop\\\\\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\\\\\nextjs-create-app\\\\\\\\pages\\\\\\\\search.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\nSearch.getInitialProps = async ctx => {\n  const {\n    query,\n    sort,\n    lang,\n    order,\n    page\n  } = ctx.query;\n\n  if (!query) {\n    return {\n      repos: {\n        total_count: 0\n      }\n    };\n  }\n\n  let queryString = `?q=${query}`;\n  if (lang) queryString += `+language:${lang}`;\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\n  if (page) queryString += `&page=${page}`;\n  const result = await api.request({\n    url: `/search/repositories${queryString}`\n  }, ctx.req, ctx.res);\n  return {\n    repos: result.data\n  };\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/pages/search.js"],"names":["useCallback","memo","isValidElement","withRouter","Router","Link","api","require","Repo","LANGUAGES","SORT_TYPE","name","value","order","selectedItemStyle","borderLeft","fontWeight","per_page","FilterLink","query","lang","sort","page","queryString","noop","Search","router","repos","querys","marginBottom","item","selected","total_count","items","map","repo","id","Number","type","ol","p","getInitialProps","ctx","result","request","url","req","res","data"],"mappings":"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","sourcesContent":["import { useCallback, memo, isValidElement } from \"react\";\r\n\r\nimport { withRouter } from \"next/router\";\r\n\r\nimport { Row, Col, List, Pagination } from \"antd\";\r\n\r\nimport Router from \"next/router\";\r\n\r\nimport Link from \"next/link\";\r\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\r\n\r\nconst api = require(\"../lib/api\");\r\n\r\nimport Repo from \"../components/Repo\";\r\n\r\n// 搜索条件\r\nconst LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\r\n\r\nconst SORT_TYPE = [\r\n  { name: \"Best Match\" },\r\n  { name: \"Most Stars\", value: \"stars\", order: \"desc\" },\r\n  { name: \"Fewest Stars\", value: \"stars\", order: \"asc\" },\r\n  { name: \"Most Forks\", value: \"forks\", order: \"desc\" },\r\n  { name: \"Fewest Stars\", value: \"forks\", order: \"asc\" },\r\n];\r\n\r\nconst selectedItemStyle = {\r\n  borderLeft: \"2px solid #e36209\",\r\n  fontWeight: 100,\r\n};\r\n\r\n// 这是一个纯粹的方法，方法一旦声明，不存在任何副作用\r\n// const doSearch = useCallback((config) => {\r\n//   Router.push({\r\n//     pathname: \"/search\",\r\n//     query: config,\r\n//   });\r\n// }, []);\r\n\r\n// react 是一个组件化的框架，组件依靠 props 和 states 进行运行的，如果能够抽象成 props 那么就可以重新申明一个组件，让组件帮忙使用，在代码维护变得更加简单\r\n// 防止了组件在点击的过程中重新声明渲染\r\n// FilterLink 组件是纯粹根据 props 进行更新的，可以 memo 进行优化，当 props 没有进行变化的时候，这个组件不会被重新渲染\r\n\r\nconst per_page = 20;\r\nconst FilterLink = memo(({ name, query, lang, sort, order, page }) => {\r\n  let queryString = `?query=${query}`;\r\n  if (lang) queryString += `&lang=${lang}`;\r\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\r\n  if (page) queryString += `&page=${page}`;\r\n\r\n  queryString += `&per_page=${per_page}`;\r\n  // if (page) queryString += `&page=${page}`;\r\n\r\n  // const doSearch = (config) => {\r\n  //   Router.push({\r\n  //     pathname: \"/search\",\r\n  //     query: {\r\n  //       query,\r\n  //       lang,\r\n  //       sort,\r\n  //       order,\r\n  //     },\r\n  //   });\r\n  // };\r\n  // 注意 a 标签不放链接，很难去做 SEO ，因为 SEO 会解析 HTML 的内容\r\n  return (\r\n    <Link href={`/search${queryString}`}>\r\n      {/* isValidElement 是用来判断是否为一个标签 */}\r\n      {isValidElement(name) ? name : <a>{name}</a>}\r\n    </Link>\r\n  );\r\n});\r\n\r\nconst noop = () => {};\r\n\r\nfunction Search({ router, repos }) {\r\n  // 注意这些数据都没有在 state 里面去创建，希望是这些页面显示的内容完全根据 url 来定的，使得整个组件是个受控的组件，不会产生任何的副作用。\r\n\r\n  // 该路由是 withRouter 传递过来的\r\n  const { ...querys } = router.query;\r\n  const { sort, order, lang, page } = router.query;\r\n\r\n  // 用于拼接路径的方法\r\n  // 注意语言变化了，但是当时选中了一个排序方式，在语言变化的时候，不应该变化其排序，所以要把排序的参数放在 query 里面。\r\n  // const handleLanguageChange = (language) => {\r\n  //   Router.push({\r\n  //     pathname: \"/search\",\r\n  //     query: {\r\n  //       query,\r\n  //       lang: language,\r\n  //       sort,\r\n  //       order,\r\n  //     },\r\n  //   });\r\n  // };\r\n  // const handleSortChange = (sort) => {\r\n  //   Router.push({\r\n  //     pathname: \"/search\",\r\n  //     query: {\r\n  //       query,\r\n  //       lang,\r\n  //       sort: sort.value,\r\n  //       order: sort.order,\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col gutter={6}>\r\n          <List\r\n            bordered\r\n            header={<span className=\"list-header\">语言</span>}\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={LANGUAGES}\r\n            renderItem={(item) => {\r\n              const selected = lang === item;\r\n              return (\r\n                <List.Item style={selected ? selectedItemStyle : null}>\r\n                  {selected ? (\r\n                    <span>{item}</span>\r\n                  ) : (\r\n                    <FilterLink {...querys} lang={item} name={item} />\r\n                  )}\r\n                  {/* <a\r\n                    onClick={() => doSearch({ sort, order, query, lang: item })}\r\n                  >\r\n                    {item}\r\n                  </a> */}\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n          <List\r\n            bordered\r\n            header={<span className=\"list-header\">排序</span>}\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={SORT_TYPE}\r\n            renderItem={(item) => {\r\n              let selected = false;\r\n              if (item.name === \"Best Match\" && !sort) {\r\n                selected = true;\r\n              } else if (item.value === sort && item.order === order) {\r\n                selected = true;\r\n              }\r\n              return (\r\n                <List.Item style={selected ? selectedItemStyle : null}>\r\n                  {selected ? (\r\n                    <span>{item.name}</span>\r\n                  ) : (\r\n                    <FilterLink\r\n                      {...querys}\r\n                      sort={item.value}\r\n                      order={item.order}\r\n                      name={item.name}\r\n                    />\r\n                  )}\r\n\r\n                  {/* <a\r\n                    onClick={() =>\r\n                      doSearch({\r\n                        sort: item.value || \"\",\r\n                        order: item.order || \"\",\r\n                        query,\r\n                        lang,\r\n                      })\r\n                    }\r\n                  >\r\n                    {item.name}\r\n                  </a> */}\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col span={18}>\r\n          <h3 className=\"repos-title\">{repos.total_count} 个仓库</h3>\r\n          {repos.items.map((repo) => (\r\n            <Repo repo={repo} key={repo.id} />\r\n          ))}\r\n          <div className=\"pagination\">\r\n            {/* itemRender 就是我们每个 item 显示的内容，itemRender 就是每个 page 对应的页码，type 就是这个分页向前还是向后还是中间的按钮，ol 就是类似于 icon ，注意 page ， type 都是 a 标签  */}\r\n            <Pagination\r\n              pageSize={per_page}\r\n              current={Number(page) || 1}\r\n              total={repos.total_count}\r\n              onChange={noop}\r\n              itemRender={(page, type, ol) => {\r\n                const p =\r\n                  type === \"page\"\r\n                    ? page\r\n                    : type === \"prev\"\r\n                    ? page - 1\r\n                    : page + 1;\r\n                const name = type === \"page\" ? page : ol;\r\n                return <FilterLink {...querys} page={p} name={name} />;\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <style jsx>{`\r\n        .root {\r\n          padding: 20px 0;\r\n        }\r\n        .list-header {\r\n          font-weight: 800;\r\n          font-size: 16px;\r\n        }\r\n        .repos-title {\r\n          border-bottom: 1px solid #eee;\r\n          font-size: 24px;\r\n          line-height: 50px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearch.getInitialProps = async (ctx) => {\r\n  const { query, sort, lang, order, page } = ctx.query;\r\n  if (!query) {\r\n    return {\r\n      repos: {\r\n        total_count: 0,\r\n      },\r\n    };\r\n  }\r\n  let queryString = `?q=${query}`;\r\n  if (lang) queryString += `+language:${lang}`;\r\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\r\n  if (page) queryString += `&page=${page}`;\r\n  const result = await api.request(\r\n    {\r\n      url: `/search/repositories${queryString}`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n\r\n  return {\r\n    repos: result.data,\r\n  };\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}