{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\nextjs-create-app\\\\pages\\\\search.js\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useCallback, memo, isValidElement } from \"react\";\nimport { withRouter } from \"next/router\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\n\nconst api = require(\"../lib/api\");\n\nimport Repo from \"../components/Repo\"; // 搜索条件\n\nconst LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\nconst SORT_TYPE = [{\n  name: \"Best Match\"\n}, {\n  name: \"Most Stars\",\n  value: \"stars\",\n  order: \"desc\"\n}, {\n  name: \"Fewest Stars\",\n  value: \"stars\",\n  order: \"asc\"\n}, {\n  name: \"Most Forks\",\n  value: \"forks\",\n  order: \"desc\"\n}, {\n  name: \"Fewest Stars\",\n  value: \"forks\",\n  order: \"asc\"\n}];\nconst selectedItemStyle = {\n  borderLeft: \"2px solid #e36209\",\n  fontWeight: 100\n}; // 这是一个纯粹的方法，方法一旦声明，不存在任何副作用\n// const doSearch = useCallback((config) => {\n//   Router.push({\n//     pathname: \"/search\",\n//     query: config,\n//   });\n// }, []);\n// react 是一个组件化的框架，组件依靠 props 和 states 进行运行的，如果能够抽象成 props 那么就可以重新申明一个组件，让组件帮忙使用，在代码维护变得更加简单\n// 防止了组件在点击的过程中重新声明渲染\n// FilterLink 组件是纯粹根据 props 进行更新的，可以 memo 进行优化，当 props 没有进行变化的时候，这个组件不会被重新渲染\n\nconst per_page = 20;\nconst FilterLink = /*#__PURE__*/memo(({\n  name,\n  query,\n  lang,\n  sort,\n  order,\n  page\n}) => {\n  let queryString = `?query=${query}`;\n  if (lang) queryString += `&lang=${lang}`;\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\n  if (page) queryString += `&page=${page}`;\n  queryString += `&per_page=${per_page}`; // if (page) queryString += `&page=${page}`;\n  // const doSearch = (config) => {\n  //   Router.push({\n  //     pathname: \"/search\",\n  //     query: {\n  //       query,\n  //       lang,\n  //       sort,\n  //       order,\n  //     },\n  //   });\n  // };\n  // 注意 a 标签不放链接，很难去做 SEO ，因为 SEO 会解析 HTML 的内容\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: `/search${queryString}`,\n    children: /*#__PURE__*/isValidElement(name) ? name : /*#__PURE__*/_jsxDEV(\"a\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n});\n\nconst noop = () => {};\n\nfunction Search({\n  router,\n  repos\n}) {\n  console.log(repos); // 注意这些数据都没有在 state 里面去创建，希望是这些页面显示的内容完全根据 url 来定的，使得整个组件是个受控的组件，不会产生任何的副作用。\n  // 该路由是 withRouter 传递过来的\n\n  const querys = Object.assign({}, router.query);\n  const {\n    sort,\n    order,\n    lang,\n    page\n  } = router.query; // 用于拼接路径的方法\n  // 注意语言变化了，但是当时选中了一个排序方式，在语言变化的时候，不应该变化其排序，所以要把排序的参数放在 query 里面。\n  // const handleLanguageChange = (language) => {\n  //   Router.push({\n  //     pathname: \"/search\",\n  //     query: {\n  //       query,\n  //       lang: language,\n  //       sort,\n  //       order,\n  //     },\n  //   });\n  // };\n  // const handleSortChange = (sort) => {\n  //   Router.push({\n  //     pathname: \"/search\",\n  //     query: {\n  //       query,\n  //       lang,\n  //       sort: sort.value,\n  //       order: sort.order,\n  //     },\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-2060511232\" + \" \" + \"root\",\n    children: [/*#__PURE__*/_jsxDEV(_Row, {\n      gutter: 20,\n      children: [/*#__PURE__*/_jsxDEV(_Col, {\n        gutter: 6,\n        children: [/*#__PURE__*/_jsxDEV(_List, {\n          bordered: true,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-2060511232\" + \" \" + \"list-header\",\n            children: \"\\u8BED\\u8A00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this),\n          style: {\n            marginBottom: 20\n          },\n          dataSource: LANGUAGES,\n          renderItem: item => {\n            const selected = lang === item;\n            return /*#__PURE__*/_jsxDEV(_List.Item, {\n              style: selected ? selectedItemStyle : null,\n              children: selected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"jsx-2060511232\",\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, querys), {}, {\n                lang: item,\n                name: item\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_List, {\n          bordered: true,\n          header: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"jsx-2060511232\" + \" \" + \"list-header\",\n            children: \"\\u6392\\u5E8F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this),\n          style: {\n            marginBottom: 20\n          },\n          dataSource: SORT_TYPE,\n          renderItem: item => {\n            let selected = false;\n\n            if (item.name === \"Best Match\" && !sort) {\n              selected = true;\n            } else if (item.value === sort && item.order === order) {\n              selected = true;\n            }\n\n            return /*#__PURE__*/_jsxDEV(_List.Item, {\n              style: selected ? selectedItemStyle : null,\n              children: selected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"jsx-2060511232\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, querys), {}, {\n                sort: item.value,\n                order: item.order,\n                name: item.name\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Col, {\n        span: 18,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"jsx-2060511232\" + \" \" + \"repos-title\",\n          children: [repos.total_count, \" \\u4E2A\\u4ED3\\u5E93\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), repos.items.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n          repo: repo\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-2060511232\" + \" \" + \"pagination\",\n          children: /*#__PURE__*/_jsxDEV(_Pagination, {\n            pageSize: per_page,\n            current: Number(page) || 1,\n            total: 1000,\n            onChange: noop,\n            itemRender: (page, type, ol) => {\n              const p = type === \"page\" ? page : type === \"prev\" ? page - 1 : page + 1;\n              const name = type === \"page\" ? page : ol;\n              return /*#__PURE__*/_jsxDEV(FilterLink, _objectSpread(_objectSpread({}, querys), {}, {\n                page: p,\n                name: name\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 24\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2060511232\",\n      children: \".root.jsx-2060511232{padding:20px 0;}.list-header.jsx-2060511232{font-weight:800;font-size:16px;}.repos-title.jsx-2060511232{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}.pagination.jsx-2060511232{padding:20px;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\pc\\\\\\\\Desktop\\\\\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\\\\\nextjs-create-app\\\\\\\\pages\\\\\\\\search.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\nSearch.getInitialProps = async ctx => {\n  const {\n    query,\n    sort,\n    lang,\n    order,\n    page\n  } = ctx.query;\n\n  if (!query) {\n    return {\n      repos: {\n        total_count: 0\n      }\n    };\n  }\n\n  let queryString = `?q=${query}`;\n  if (lang) queryString += `+language:${lang}`;\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\n  if (page) queryString += `&page=${page}`;\n  queryString += `&per_page=${per_page}`;\n  const result = await api.request({\n    url: `/search/repositories${queryString}`\n  }, ctx.req, ctx.res);\n  return {\n    repos: result.data\n  };\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/pages/search.js"],"names":["useCallback","memo","isValidElement","withRouter","Router","Link","api","require","Repo","LANGUAGES","SORT_TYPE","name","value","order","selectedItemStyle","borderLeft","fontWeight","per_page","FilterLink","query","lang","sort","page","queryString","noop","Search","router","repos","console","log","querys","marginBottom","item","selected","total_count","items","map","repo","id","Number","type","ol","p","getInitialProps","ctx","result","request","url","req","res","data"],"mappings":"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","sourcesContent":["import { useCallback, memo, isValidElement } from \"react\";\r\n\r\nimport { withRouter } from \"next/router\";\r\n\r\nimport { Row, Col, List, Pagination } from \"antd\";\r\n\r\nimport Router from \"next/router\";\r\n\r\nimport Link from \"next/link\";\r\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\r\n\r\nconst api = require(\"../lib/api\");\r\n\r\nimport Repo from \"../components/Repo\";\r\n\r\n// 搜索条件\r\nconst LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\r\n\r\nconst SORT_TYPE = [\r\n  { name: \"Best Match\" },\r\n  { name: \"Most Stars\", value: \"stars\", order: \"desc\" },\r\n  { name: \"Fewest Stars\", value: \"stars\", order: \"asc\" },\r\n  { name: \"Most Forks\", value: \"forks\", order: \"desc\" },\r\n  { name: \"Fewest Stars\", value: \"forks\", order: \"asc\" },\r\n];\r\n\r\nconst selectedItemStyle = {\r\n  borderLeft: \"2px solid #e36209\",\r\n  fontWeight: 100,\r\n};\r\n\r\n// 这是一个纯粹的方法，方法一旦声明，不存在任何副作用\r\n// const doSearch = useCallback((config) => {\r\n//   Router.push({\r\n//     pathname: \"/search\",\r\n//     query: config,\r\n//   });\r\n// }, []);\r\n\r\n// react 是一个组件化的框架，组件依靠 props 和 states 进行运行的，如果能够抽象成 props 那么就可以重新申明一个组件，让组件帮忙使用，在代码维护变得更加简单\r\n// 防止了组件在点击的过程中重新声明渲染\r\n// FilterLink 组件是纯粹根据 props 进行更新的，可以 memo 进行优化，当 props 没有进行变化的时候，这个组件不会被重新渲染\r\n\r\nconst per_page = 20;\r\nconst FilterLink = memo(({ name, query, lang, sort, order, page }) => {\r\n  let queryString = `?query=${query}`;\r\n  if (lang) queryString += `&lang=${lang}`;\r\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\r\n  if (page) queryString += `&page=${page}`;\r\n\r\n  queryString += `&per_page=${per_page}`;\r\n  // if (page) queryString += `&page=${page}`;\r\n\r\n  // const doSearch = (config) => {\r\n  //   Router.push({\r\n  //     pathname: \"/search\",\r\n  //     query: {\r\n  //       query,\r\n  //       lang,\r\n  //       sort,\r\n  //       order,\r\n  //     },\r\n  //   });\r\n  // };\r\n  // 注意 a 标签不放链接，很难去做 SEO ，因为 SEO 会解析 HTML 的内容\r\n  return (\r\n    <Link href={`/search${queryString}`}>\r\n      {/* isValidElement 是用来判断是否为一个标签 */}\r\n      {isValidElement(name) ? name : <a>{name}</a>}\r\n    </Link>\r\n  );\r\n});\r\n\r\nconst noop = () => {};\r\n\r\nfunction Search({ router, repos }) {\r\n  console.log(repos);\r\n  // 注意这些数据都没有在 state 里面去创建，希望是这些页面显示的内容完全根据 url 来定的，使得整个组件是个受控的组件，不会产生任何的副作用。\r\n\r\n  // 该路由是 withRouter 传递过来的\r\n  const { ...querys } = router.query;\r\n  const { sort, order, lang, page } = router.query;\r\n\r\n  // 用于拼接路径的方法\r\n  // 注意语言变化了，但是当时选中了一个排序方式，在语言变化的时候，不应该变化其排序，所以要把排序的参数放在 query 里面。\r\n  // const handleLanguageChange = (language) => {\r\n  //   Router.push({\r\n  //     pathname: \"/search\",\r\n  //     query: {\r\n  //       query,\r\n  //       lang: language,\r\n  //       sort,\r\n  //       order,\r\n  //     },\r\n  //   });\r\n  // };\r\n  // const handleSortChange = (sort) => {\r\n  //   Router.push({\r\n  //     pathname: \"/search\",\r\n  //     query: {\r\n  //       query,\r\n  //       lang,\r\n  //       sort: sort.value,\r\n  //       order: sort.order,\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Row gutter={20}>\r\n        <Col gutter={6}>\r\n          <List\r\n            bordered\r\n            header={<span className=\"list-header\">语言</span>}\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={LANGUAGES}\r\n            renderItem={(item) => {\r\n              const selected = lang === item;\r\n              return (\r\n                <List.Item style={selected ? selectedItemStyle : null}>\r\n                  {selected ? (\r\n                    <span>{item}</span>\r\n                  ) : (\r\n                    <FilterLink {...querys} lang={item} name={item} />\r\n                  )}\r\n                  {/* <a\r\n                    onClick={() => doSearch({ sort, order, query, lang: item })}\r\n                  >\r\n                    {item}\r\n                  </a> */}\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n          <List\r\n            bordered\r\n            header={<span className=\"list-header\">排序</span>}\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={SORT_TYPE}\r\n            renderItem={(item) => {\r\n              let selected = false;\r\n              if (item.name === \"Best Match\" && !sort) {\r\n                selected = true;\r\n              } else if (item.value === sort && item.order === order) {\r\n                selected = true;\r\n              }\r\n              return (\r\n                <List.Item style={selected ? selectedItemStyle : null}>\r\n                  {selected ? (\r\n                    <span>{item.name}</span>\r\n                  ) : (\r\n                    <FilterLink\r\n                      {...querys}\r\n                      sort={item.value}\r\n                      order={item.order}\r\n                      name={item.name}\r\n                    />\r\n                  )}\r\n\r\n                  {/* <a\r\n                    onClick={() =>\r\n                      doSearch({\r\n                        sort: item.value || \"\",\r\n                        order: item.order || \"\",\r\n                        query,\r\n                        lang,\r\n                      })\r\n                    }\r\n                  >\r\n                    {item.name}\r\n                  </a> */}\r\n                </List.Item>\r\n              );\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col span={18}>\r\n          <h3 className=\"repos-title\">{repos.total_count} 个仓库</h3>\r\n          {repos.items.map((repo) => (\r\n            <Repo repo={repo} key={repo.id} />\r\n          ))}\r\n          <div className=\"pagination\">\r\n            {/* itemRender 就是我们每个 item 显示的内容，itemRender 就是每个 page 对应的页码，type 就是这个分页向前还是向后还是中间的按钮，ol 就是类似于 icon ，注意 page ， type 都是 a 标签  */}\r\n            <Pagination\r\n              pageSize={per_page}\r\n              current={Number(page) || 1}\r\n              total={1000}\r\n              onChange={noop}\r\n              itemRender={(page, type, ol) => {\r\n                const p =\r\n                  type === \"page\"\r\n                    ? page\r\n                    : type === \"prev\"\r\n                    ? page - 1\r\n                    : page + 1;\r\n                const name = type === \"page\" ? page : ol;\r\n                return <FilterLink {...querys} page={p} name={name} />;\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <style jsx>{`\r\n        .root {\r\n          padding: 20px 0;\r\n        }\r\n        .list-header {\r\n          font-weight: 800;\r\n          font-size: 16px;\r\n        }\r\n        .repos-title {\r\n          border-bottom: 1px solid #eee;\r\n          font-size: 24px;\r\n          line-height: 50px;\r\n        }\r\n        .pagination {\r\n          padding: 20px;\r\n          text-align: center;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearch.getInitialProps = async (ctx) => {\r\n  const { query, sort, lang, order, page } = ctx.query;\r\n  if (!query) {\r\n    return {\r\n      repos: {\r\n        total_count: 0,\r\n      },\r\n    };\r\n  }\r\n  let queryString = `?q=${query}`;\r\n  if (lang) queryString += `+language:${lang}`;\r\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\r\n  if (page) queryString += `&page=${page}`;\r\n  queryString += `&per_page=${per_page}`;\r\n  const result = await api.request(\r\n    {\r\n      url: `/search/repositories${queryString}`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n\r\n  return {\r\n    repos: result.data,\r\n  };\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}