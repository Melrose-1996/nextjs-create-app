{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\\\u6155\\u8BFE\\u5B66\\u4E60\\\\nextjs-create-app\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"next/app\";\nimport Layout from \"../components/layout\"; // import Router from \"next/router\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport PageLoading from \"../components/PageLoading\";\nimport { Provider } from \"react-redux\";\nimport MyContext from \"../lib/my-context\";\nimport testHoc from \"../lib/with-redux\";\n\nfunction MyApp({\n  Component,\n  pageProps,\n  reduxStore\n}) {\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    const handleStart = () => setLoading(true);\n\n    const handleComplete = () => setLoading(false);\n\n    router.events.on(\"routeChangeStart\", handleStart);\n    router.events.on(\"routeChangeComplete\", handleComplete);\n    router.events.on(\"routeChangeError\", handleComplete); // 搜索仓库\n    // axios\n    //   .get(\"/github/search/repositories?q=react\")\n    //   .then((resp) => console.log(resp));\n\n    return () => {\n      router.events.off(\"routeChangeStart\", handleStart);\n      router.events.off(\"routeChangeComplete\", handleComplete);\n      router.events.off(\"routeChangeError\", handleComplete);\n    };\n  }); // return loading && <div>Loading....{/*I have an animation here*/}</div>;\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: reduxStore,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n        value: \"Melrose\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 22\n        }, this) : null, /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n} // MyApp.getInitialProps = async (appContext) => {\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps };\n// };\n\n\nMyApp.getInitialProps = async ctx => {\n  // 我们需要创建一个 store\n  let reduxStore;\n\n  if (isServer) {\n    const {\n      req\n    } = ctx.ctx;\n    const session = req.session;\n\n    if (session && session.userInfo) {\n      reduxStore = getOrCreateStore({\n        user: session.userInfo\n      });\n    } else {\n      reduxStore = getOrCreateStore();\n    }\n  } else {\n    reduxStore = getOrCreateStore();\n  } // 初始化 store\n  // const reduxStore = getOrCreateStore();\n\n\n  ctx.reduxStore = reduxStore;\n  let appProps = {};\n\n  if (typeof App.getInitialProps === \"function\") {\n    appProps = await App.getInitialProps(ctx);\n  }\n\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    initialReduxState: reduxStore.getState()\n  });\n};\n\nexport default testHoc(MyApp);","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/pages/_app.js"],"names":["App","Layout","useState","useEffect","useRouter","PageLoading","Provider","MyContext","testHoc","MyApp","Component","pageProps","reduxStore","router","loading","setLoading","handleStart","handleComplete","events","on","off","getInitialProps","ctx","isServer","req","session","userInfo","getOrCreateStore","user","appProps","initialReduxState","getState"],"mappings":"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","sourcesContent":["import \"../styles/globals.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from \"next/app\";\r\nimport Layout from \"../components/layout\";\r\n\r\n// import Router from \"next/router\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport PageLoading from \"../components/PageLoading\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport MyContext from \"../lib/my-context\";\r\n\r\nimport testHoc from \"../lib/with-redux\";\r\n\r\nfunction MyApp({ Component, pageProps, reduxStore }) {\r\n  const router = useRouter();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleStart = () => setLoading(true);\r\n    const handleComplete = () => setLoading(false);\r\n\r\n    router.events.on(\"routeChangeStart\", handleStart);\r\n    router.events.on(\"routeChangeComplete\", handleComplete);\r\n    router.events.on(\"routeChangeError\", handleComplete);\r\n\r\n    // 搜索仓库\r\n    // axios\r\n    //   .get(\"/github/search/repositories?q=react\")\r\n    //   .then((resp) => console.log(resp));\r\n\r\n    return () => {\r\n      router.events.off(\"routeChangeStart\", handleStart);\r\n      router.events.off(\"routeChangeComplete\", handleComplete);\r\n      router.events.off(\"routeChangeError\", handleComplete);\r\n    };\r\n  });\r\n\r\n  // return loading && <div>Loading....{/*I have an animation here*/}</div>;\r\n\r\n  return (\r\n    <Provider store={reduxStore}>\r\n      <Layout>\r\n        <MyContext.Provider value=\"Melrose\">\r\n          {/* <PageLoading /> */}\r\n          {loading ? <PageLoading /> : null}\r\n          <Component {...pageProps} />\r\n        </MyContext.Provider>\r\n      </Layout>\r\n    </Provider>\r\n  );\r\n}\r\n\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//   return { ...appProps };\r\n// };\r\n\r\nMyApp.getInitialProps = async (ctx) => {\r\n  // 我们需要创建一个 store\r\n\r\n  let reduxStore;\r\n\r\n  if (isServer) {\r\n    const { req } = ctx.ctx;\r\n    const session = req.session;\r\n    if (session && session.userInfo) {\r\n      reduxStore = getOrCreateStore({\r\n        user: session.userInfo,\r\n      });\r\n    } else {\r\n      reduxStore = getOrCreateStore();\r\n    }\r\n  } else {\r\n    reduxStore = getOrCreateStore();\r\n  }\r\n\r\n  // 初始化 store\r\n  // const reduxStore = getOrCreateStore();\r\n\r\n  ctx.reduxStore = reduxStore;\r\n  let appProps = {};\r\n  if (typeof App.getInitialProps === \"function\") {\r\n    appProps = await App.getInitialProps(ctx);\r\n  }\r\n\r\n  return {\r\n    ...appProps,\r\n    initialReduxState: reduxStore.getState(),\r\n  };\r\n};\r\n\r\nexport default testHoc(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}