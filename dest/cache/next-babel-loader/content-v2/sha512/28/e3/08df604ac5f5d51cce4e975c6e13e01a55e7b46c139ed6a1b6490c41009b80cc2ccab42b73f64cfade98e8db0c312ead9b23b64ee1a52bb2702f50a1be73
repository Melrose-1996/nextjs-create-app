{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/pc/Desktop/\\u6155\\u8BFE\\u5B66\\u4E60/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/pc/Desktop/\\u6155\\u8BFE\\u5B66\\u4E60/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\n// 专门处理 getInitalProps 请求接口功能的相关函数\n// 由于在客户端执行又要在服务端执行，所以不直接使用 exports 这语法，在 ndoe.js 目前不支持\nvar axios = require(\"axios\");\n\nvar github_base_url = \"https://api.github.com\";\n\nfunction requestGithub(_x, _x2, _x3, _x4) {\n  return _requestGithub.apply(this, arguments);\n} // 服务端\n\n\nfunction _requestGithub() {\n  _requestGithub = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, data, headers) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              url: \"\".concat(github_base_url).concat(url),\n              method: method,\n              data: data,\n              headers: headers\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _requestGithub.apply(this, arguments);\n}\n\nvar isServer = false;\n\nfunction request(_x5, _x6, _x7) {\n  return _request.apply(this, arguments);\n}\n\nfunction _request() {\n  _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref, req, res) {\n    var _ref$method, method, url, _ref$data, data, session, githubAuth, headers;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref$method = _ref.method, method = _ref$method === void 0 ? \"GET\" : _ref$method, url = _ref.url, _ref$data = _ref.data, data = _ref$data === void 0 ? {} : _ref$data;\n\n            if (url) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw Error(\"url must provide\");\n\n          case 3:\n            if (!isServer) {\n              _context2.next = 13;\n              break;\n            }\n\n            // 服务端\n            session = req.session;\n            githubAuth = session.gethubAuth || {}; // 请求 github 数据\n\n            headers = {};\n\n            if (githubAuth.access_token) {\n              headers[\"Authorization\"] = \"\".concat(githubAuth.token_type, \" \").concat(githubAuth.access_token);\n            }\n\n            _context2.next = 10;\n            return requestGithub(method, url, data, headers);\n\n          case 10:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 13:\n            _context2.next = 15;\n            return axios({\n              url: \"/github\".concat(url),\n              method: method,\n              data: data\n            });\n\n          case 15:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _request.apply(this, arguments);\n}\n\nmodule.exports = {\n  request: request,\n  requestGithub: requestGithub\n};","map":{"version":3,"sources":["C:/Users/pc/Desktop/慕课学习/nextjs-create-app/lib/api.js"],"names":["axios","require","github_base_url","requestGithub","method","url","data","headers","isServer","request","req","res","Error","session","githubAuth","gethubAuth","access_token","token_type","module","exports"],"mappings":";;;;AAAA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,eAAe,GAAG,wBAAxB;;SAEeC,a;;EASf;;;;4EATA,iBAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,EAAgDC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeP,KAAK,CAAC;AACjBK,cAAAA,GAAG,YAAKH,eAAL,SAAuBG,GAAvB,CADc;AAEjBD,cAAAA,MAAM,EAANA,MAFiB;AAGjBE,cAAAA,IAAI,EAAJA,IAHiB;AAIjBC,cAAAA,OAAO,EAAPA;AAJiB,aAAD,CADpB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUA,IAAMC,QAAQ,QAAd;;SACeC,O;;;;;sEAAf,wBAA2DC,GAA3D,EAAgEC,GAAhE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyBP,MAAzB,EAAyBA,MAAzB,4BAAkC,KAAlC,gBAAyCC,GAAzC,QAAyCA,GAAzC,mBAA8CC,IAA9C,EAA8CA,IAA9C,0BAAqD,EAArD;;AAAA,gBACOD,GADP;AAAA;AAAA;AAAA;;AAAA,kBAEUO,KAAK,CAAC,kBAAD,CAFf;;AAAA;AAAA,iBAIMJ,QAJN;AAAA;AAAA;AAAA;;AAKI;AACMK,YAAAA,OANV,GAMoBH,GAAG,CAACG,OANxB;AAOUC,YAAAA,UAPV,GAOuBD,OAAO,CAACE,UAAR,IAAsB,EAP7C,EAQI;;AACMR,YAAAA,OATV,GASoB,EATpB;;AAUI,gBAAIO,UAAU,CAACE,YAAf,EAA6B;AAC3BT,cAAAA,OAAO,CACL,eADK,CAAP,aAEOO,UAAU,CAACG,UAFlB,cAEgCH,UAAU,CAACE,YAF3C;AAGD;;AAdL;AAAA,mBAeiBb,aAAa,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,CAf9B;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAoBiBP,KAAK,CAAC;AACjBK,cAAAA,GAAG,mBAAYA,GAAZ,CADc;AAEjBD,cAAAA,MAAM,EAANA,MAFiB;AAGjBE,cAAAA,IAAI,EAAJA;AAHiB,aAAD,CApBtB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA4BAY,MAAM,CAACC,OAAP,GAAiB;AACfV,EAAAA,OAAO,EAAPA,OADe;AAEfN,EAAAA,aAAa,EAAbA;AAFe,CAAjB","sourcesContent":["// 专门处理 getInitalProps 请求接口功能的相关函数\r\n// 由于在客户端执行又要在服务端执行，所以不直接使用 exports 这语法，在 ndoe.js 目前不支持\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst github_base_url = \"https://api.github.com\";\r\n\r\nasync function requestGithub(method, url, data, headers) {\r\n  return await axios({\r\n    url: `${github_base_url}${url}`,\r\n    method,\r\n    data,\r\n    headers,\r\n  });\r\n}\r\n\r\n// 服务端\r\nconst isServer = typeof window === \"undefined\";\r\nasync function request({ method = \"GET\", url, data = {} }, req, res) {\r\n  if (!url) {\r\n    throw Error(\"url must provide\");\r\n  }\r\n  if (isServer) {\r\n    // 服务端\r\n    const session = req.session;\r\n    const githubAuth = session.gethubAuth || {};\r\n    // 请求 github 数据\r\n    const headers = {};\r\n    if (githubAuth.access_token) {\r\n      headers[\r\n        \"Authorization\"\r\n      ] = `${githubAuth.token_type} ${githubAuth.access_token}`;\r\n    }\r\n    return await requestGithub(method, url, data, headers);\r\n  } else {\r\n    // 客户端 - 我们是需要请求自己的服务的，我们自己的服务对于 URL 也会进行处理\r\n    // /search/repositories?q=react => /github/search/repositories?q=react\r\n    // 这样我们服务端通过判断 /github 开头的这个请求的地址进行一个特殊的处理\r\n    return await axios({\r\n      url: `/github${url}`,\r\n      method,\r\n      data,\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  request,\r\n  requestGithub,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}