{"ast":null,"code":"import _regeneratorRuntime from \"D:/lls/chenzhengquan/Desktop/muke-study/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/lls/chenzhengquan/Desktop/muke-study/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\lls\\\\chenzhengquan\\\\Desktop\\\\muke-study\\\\nextjs-create-app\\\\pages\\\\search.js\";\nimport { withRouter } from \"next/router\";\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\n\nvar api = require(\"../lib/api\"); // 搜索条件\n\n\nvar LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\nvar SORT_TYPE = [{\n  name: \"Best Match\"\n}, {\n  name: \"Most Stars\",\n  value: \"stars\",\n  order: \"desc\"\n}, {\n  name: \"Most Stars\",\n  value: \"stars\",\n  order: \"desc\"\n}, {\n  name: \"Most Stars\",\n  value: \"stars\",\n  order: \"desc\"\n}];\n\nfunction Search(_ref) {\n  var router = _ref.router,\n      repos = _ref.repos;\n  console.log(repos);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: router.query.query\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Search;\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _ctx$query, query, sort, lang, order, page, queryString, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(ctx, 11111);\n            _ctx$query = ctx.query, query = _ctx$query.query, sort = _ctx$query.sort, lang = _ctx$query.lang, order = _ctx$query.order, page = _ctx$query.page;\n\n            if (query) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              repos: {\n                total_count: 0\n              }\n            });\n\n          case 4:\n            queryString = \"?q=\".concat(query);\n            if (lang) queryString += \"+language:\".concat(lang);\n            if (sort) queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || \"desc\");\n            if (page) queryString += \"&page=\".concat(page);\n            _context.next = 10;\n            return api.request({\n              url: \"/search/repositories\".concat(queryString)\n            }, ctx.req, ctx.res);\n\n          case 10:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              repos: result.data\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(Search);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/lls/chenzhengquan/Desktop/muke-study/nextjs-create-app/pages/search.js"],"names":["withRouter","api","require","LANGUAGES","SORT_TYPE","name","value","order","Search","router","repos","console","log","query","getInitialProps","ctx","sort","lang","page","total_count","queryString","request","url","req","res","result","data"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB,C,CAEA;;;AACA,IAAMC,SAAS,GAAG,CAAC,YAAD,EAAe,MAAf,EAAuB,KAAvB,EAA8B,YAA9B,EAA4C,MAA5C,EAAoD,MAApD,CAAlB;AAEA,IAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADgB,EAEhB;AAAEA,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAFgB,EAGhB;AAAEF,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAHgB,EAIhB;AAAEF,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAJgB,CAAlB;;AAOA,SAASC,MAAT,OAAmC;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,KAAS,QAATA,KAAS;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBAAO;AAAA,cAAOD,MAAM,CAACI,KAAP,CAAaA;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAHQL,M;;AAKTA,MAAM,CAACM,eAAP;AAAA,uEAAyB,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EAAiB,KAAjB;AADuB,yBAEoBA,GAAG,CAACF,KAFxB,EAEfA,KAFe,cAEfA,KAFe,EAERG,IAFQ,cAERA,IAFQ,EAEFC,IAFE,cAEFA,IAFE,EAEIV,KAFJ,cAEIA,KAFJ,EAEWW,IAFX,cAEWA,IAFX;;AAAA,gBAGlBL,KAHkB;AAAA;AAAA;AAAA;;AAAA,6CAId;AACLH,cAAAA,KAAK,EAAE;AACLS,gBAAAA,WAAW,EAAE;AADR;AADF,aAJc;;AAAA;AAUnBC,YAAAA,WAVmB,gBAUCP,KAVD;AAWvB,gBAAII,IAAJ,EAAUG,WAAW,wBAAiBH,IAAjB,CAAX;AACV,gBAAID,IAAJ,EAAUI,WAAW,oBAAaJ,IAAb,oBAA2BT,KAAK,IAAI,MAApC,CAAX;AACV,gBAAIW,IAAJ,EAAUE,WAAW,oBAAaF,IAAb,CAAX;AAba;AAAA,mBAcFjB,GAAG,CAACoB,OAAJ,CACnB;AACEC,cAAAA,GAAG,gCAAyBF,WAAzB;AADL,aADmB,EAInBL,GAAG,CAACQ,GAJe,EAKnBR,GAAG,CAACS,GALe,CAdE;;AAAA;AAcjBC,YAAAA,MAdiB;AAAA,6CAsBhB;AACLf,cAAAA,KAAK,EAAEe,MAAM,CAACC;AADT,aAtBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AA2BA,qBAAe1B,UAAU,CAACQ,MAAD,CAAzB","sourcesContent":["import { withRouter } from \"next/router\";\r\n/**\r\n * sort: 排序方式\r\n * order: 排序顺序\r\n * lang: 仓库的项目开发主语言\r\n * page: 分页页面\r\n *\r\n */\r\n\r\nconst api = require(\"../lib/api\");\r\n\r\n// 搜索条件\r\nconst LANGUAGES = [\"JavaScript\", \"HTML\", \"CSS\", \"TypeScript\", \"Java\", \"Rust\"];\r\n\r\nconst SORT_TYPE = [\r\n  { name: \"Best Match\" },\r\n  { name: \"Most Stars\", value: \"stars\", order: \"desc\" },\r\n  { name: \"Most Stars\", value: \"stars\", order: \"desc\" },\r\n  { name: \"Most Stars\", value: \"stars\", order: \"desc\" },\r\n];\r\n\r\nfunction Search({ router, repos }) {\r\n  console.log(repos);\r\n  return <span>{router.query.query}</span>;\r\n}\r\n\r\nSearch.getInitialProps = async (ctx) => {\r\n  console.log(ctx, 11111);\r\n  const { query, sort, lang, order, page } = ctx.query;\r\n  if (!query) {\r\n    return {\r\n      repos: {\r\n        total_count: 0,\r\n      },\r\n    };\r\n  }\r\n  let queryString = `?q=${query}`;\r\n  if (lang) queryString += `+language:${lang}`;\r\n  if (sort) queryString += `&sort=${sort}&order=${order || \"desc\"}`;\r\n  if (page) queryString += `&page=${page}`;\r\n  const result = await api.request(\r\n    {\r\n      url: `/search/repositories${queryString}`,\r\n    },\r\n    ctx.req,\r\n    ctx.res\r\n  );\r\n\r\n  return {\r\n    repos: result.data,\r\n  };\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}