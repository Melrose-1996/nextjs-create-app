{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/pc/Desktop/\\u6155\\u8BFE\\u5B66\\u4E60/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/pc/Desktop/\\u6155\\u8BFE\\u5B66\\u4E60/nextjs-create-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport withRepo from \"../../components/with-repo-basic.jsx\";\nimport api from \"../../lib/api\";\nimport MDRenderer from \"../../components/MarkFdownRenderer\";\n\nfunction Detail(_ref) {\n  var readme = _ref.readme;\n  // atob 注意在浏览器渲染的时候，window 是有这个方法的，但是在服务端渲染的时候 js 是没有这个方法的\n  // 需要兼容是需要 import 一个公共模块，使得服务端和客户端都可以使用这些公共的方法\n  // console.log(atob(readme.content), \"++++++++++\");\n  // 注意这个 div 里面不能写任何东西\n  return /*#__PURE__*/_jsx(MDRenderer, {\n    content: readme.content,\n    isBase64: true\n  });\n}\n\nDetail.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _ctx$query, owner, name, readmeResp;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;\n            _context.next = 3;\n            return api.request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n            }, ctx.req, ctx.res);\n\n          case 3:\n            readmeResp = _context.sent;\n            return _context.abrupt(\"return\", {\n              readme: readmeResp.data\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withRepo(Detail, \"index\"); // import Repo from \"../../components/Repo\";\n// import Link from \"next/link\";\n// import api from \"../../lib/api\";\n// import { withRouter } from \"next/router\";\n// // 这样我们把键值对的形式映射成了一个字符串\n// function makeQuery(queryObj) {\n//   // 遍历这个 obj\n//   const query = Object.entries(queryObj)\n//     .reduce((result, entry) => {\n//       result.push(entry.join(\"=\"));\n//       return result;\n//     }, [])\n//     .join(\"&\");\n//   return `?${query}`;\n// }\n// function Detail({ repoBasic, router }) {\n//   const query = makeQuery(router.query);\n//   return (\n//     <div className=\"root\">\n//       <div className=\"repo-basic\">\n//         <Repo repo={repoBasic} />\n//         <div className=\"tabs\">\n//           <Link href={`/detail${query}`}>\n//             <a className=\"tab index\">Readme</a>\n//           </Link>\n//           <Link href={`/detail/issues${query}`}>\n//             <a className=\"tab issues\">Issues</a>\n//           </Link>\n//         </div>\n//       </div>\n//       <div>Readme</div>\n//       <style jsx>{`\n//         .root {\n//           padding-top: 20px;\n//         }\n//         .repo-basic {\n//           padding: 20px;\n//           border: 1px solid #eee;\n//           margin-bottom: 20px;\n//           border-radius: 5px;\n//         }\n//         .tab + .tab {\n//           margin-left: 20px;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n// console.log(Detail.prop);\n// Detail.getInitialProps = async (ctx) => {\n//   console.log(ctx.query);\n//   const { owner, name } = ctx.query;\n//   //   return {\n//   //     name: \"melrose\",\n//   //   };\n//   // return new Promise((resolve) => {\n//   //   setTimeout(() => {\n//   //     resolve({});\n//   //   }, 3000);\n//   // });\n//   const repoBasic = await api.request(\n//     { url: `/repos/${owner}/${name}` },\n//     ctx.req,\n//     ctx.res\n//   );\n//   return {\n//     repoBasic: repoBasic.data,\n//   };\n// };\n// export default withRouter(Detail);","map":null,"metadata":{},"sourceType":"module"}