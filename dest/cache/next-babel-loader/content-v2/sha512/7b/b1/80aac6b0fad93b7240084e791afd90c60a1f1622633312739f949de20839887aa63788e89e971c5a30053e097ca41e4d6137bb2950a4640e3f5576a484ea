{"ast":null,"code":"import \"../styles/globals.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"next/app\";\nimport Layout from \"../components/layout\"; // import Router from \"next/router\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport PageLoading from \"../components/PageLoading\";\nimport { Provider } from \"react-redux\";\nimport MyContext from \"../lib/my-context\";\nimport testHoc from \"../lib/with-redux\"; // function MyApp({ Component, pageProps, reduxStore }) {\n//   const router = useRouter();\n//   const [loading, setLoading] = useState(false);\n//   useEffect(() => {\n//     const handleStart = () => setLoading(true);\n//     const handleComplete = () => setLoading(false);\n//     router.events.on(\"routeChangeStart\", handleStart);\n//     router.events.on(\"routeChangeComplete\", handleComplete);\n//     router.events.on(\"routeChangeError\", handleComplete);\n//     // 搜索仓库\n//     // axios\n//     //   .get(\"/github/search/repositories?q=react\")\n//     //   .then((resp) => console.log(resp));\n//     return () => {\n//       router.events.off(\"routeChangeStart\", handleStart);\n//       router.events.off(\"routeChangeComplete\", handleComplete);\n//       router.events.off(\"routeChangeError\", handleComplete);\n//     };\n//   });\n//   // return loading && <div>Loading....{/*I have an animation here*/}</div>;\n//   return (\n//     <Provider store={reduxStore}>\n//       <Layout>\n//         <MyContext.Provider value=\"Melrose\">\n//           {/* <PageLoading /> */}\n//           {loading ? <PageLoading /> : null}\n//           <Component {...pageProps} />\n//         </MyContext.Provider>\n//       </Layout>\n//     </Provider>\n//   );\n// }\n// MyApp.getInitialProps = async (appContext) => {\n//   const { Component } = appContext;\n//   let pageProps = {};\n//   if (Component.getInitialProps) {\n//     pageProps = await\n//   }\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps };\n// };\n\nexport default testHoc(MyApp);","map":{"version":3,"sources":["D:/lls/chenzhengquan/Desktop/muke-study/nextjs-create-app/pages/_app.js"],"names":["App","Layout","useState","useEffect","useRouter","PageLoading","Provider","MyContext","testHoc","MyApp"],"mappings":"AAAA,OAAO,uBAAP;AACA,OAAO,oBAAP;AACA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,OAAO,CAACC,KAAD,CAAtB","sourcesContent":["import \"../styles/globals.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from \"next/app\";\r\nimport Layout from \"../components/layout\";\r\n\r\n// import Router from \"next/router\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport PageLoading from \"../components/PageLoading\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport MyContext from \"../lib/my-context\";\r\n\r\nimport testHoc from \"../lib/with-redux\";\r\n\r\n// function MyApp({ Component, pageProps, reduxStore }) {\r\n//   const router = useRouter();\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const handleStart = () => setLoading(true);\r\n//     const handleComplete = () => setLoading(false);\r\n\r\n//     router.events.on(\"routeChangeStart\", handleStart);\r\n//     router.events.on(\"routeChangeComplete\", handleComplete);\r\n//     router.events.on(\"routeChangeError\", handleComplete);\r\n\r\n//     // 搜索仓库\r\n//     // axios\r\n//     //   .get(\"/github/search/repositories?q=react\")\r\n//     //   .then((resp) => console.log(resp));\r\n\r\n//     return () => {\r\n//       router.events.off(\"routeChangeStart\", handleStart);\r\n//       router.events.off(\"routeChangeComplete\", handleComplete);\r\n//       router.events.off(\"routeChangeError\", handleComplete);\r\n//     };\r\n//   });\r\n\r\n//   // return loading && <div>Loading....{/*I have an animation here*/}</div>;\r\n\r\n//   return (\r\n//     <Provider store={reduxStore}>\r\n//       <Layout>\r\n//         <MyContext.Provider value=\"Melrose\">\r\n//           {/* <PageLoading /> */}\r\n//           {loading ? <PageLoading /> : null}\r\n//           <Component {...pageProps} />\r\n//         </MyContext.Provider>\r\n//       </Layout>\r\n//     </Provider>\r\n//   );\r\n// }\r\n\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   const { Component } = appContext;\r\n//   let pageProps = {};\r\n//   if (Component.getInitialProps) {\r\n//     pageProps = await\r\n//   }\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//   return { ...appProps };\r\n// };\r\n\r\nexport default testHoc(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}