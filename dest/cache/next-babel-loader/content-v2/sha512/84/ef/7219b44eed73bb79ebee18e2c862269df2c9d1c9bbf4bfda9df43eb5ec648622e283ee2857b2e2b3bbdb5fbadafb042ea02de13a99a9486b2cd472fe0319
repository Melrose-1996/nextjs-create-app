{"ast":null,"code":"// 专门处理 getInitalProps 请求接口功能的相关函数\n// 由于在客户端执行又要在服务端执行，所以不直接使用 exports 这语法，在 ndoe.js 目前不支持\nconst axios = require(\"axios\");\n\nconst github_base_url = \"https://api.github.com\"; // 这个方法就是单纯的向服务端发起请求的方法\n\nasync function requestGithub(method, url, data, headers) {\n  return await axios({\n    url: `${github_base_url}${url}`,\n    method,\n    data,\n    headers\n  });\n} // 服务端\n\n\nconst isServer = true;\n\nasync function request({\n  method = \"GET\",\n  url,\n  data = {}\n}, req, res) {\n  if (!url) {\n    throw Error(\"url must provide\");\n  }\n\n  if (isServer) {\n    // 服务端\n    const session = req.session;\n    const githubAuth = session.githubAuth || {}; // 请求 github 数据\n\n    const headers = {};\n\n    if (githubAuth.access_token) {\n      headers[\"Authorization\"] = `${githubAuth.token_type} ${githubAuth.access_token}`;\n    }\n\n    return await requestGithub(method, url, data, headers);\n  } else {\n    // 客户端 - 我们是需要请求自己的服务的，我们自己的服务对于 URL 也会进行处理\n    // /search/repositories?q=react => /github/search/repositories?q=react\n    // 这样我们服务端通过判断 /github 开头的这个请求的地址进行一个特殊的处理\n    return await axios({\n      url: `/github${url}`,\n      method,\n      data\n    });\n  }\n}\n\nmodule.exports = {\n  request,\n  requestGithub\n};","map":null,"metadata":{},"sourceType":"script"}