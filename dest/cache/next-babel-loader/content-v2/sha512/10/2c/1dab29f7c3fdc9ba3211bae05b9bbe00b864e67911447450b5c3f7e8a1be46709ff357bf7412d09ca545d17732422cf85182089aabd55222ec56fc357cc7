{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\lls\\\\chenzhengquan\\\\Desktop\\\\muke-study\\\\nextjs-create-app\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"next/app\";\nimport Layout from \"../components/layout\"; // import Router from \"next/router\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport PageLoading from \"../components/PageLoading\";\nimport { Provider } from \"react-redux\";\nimport MyContext from \"../lib/my-context\";\nimport testHoc from \"../lib/with-redux\"; // function MyApp({ Component, pageProps, reduxStore }) {\n//   const router = useRouter();\n//   const [loading, setLoading] = useState(false);\n//   useEffect(() => {\n//     const handleStart = () => setLoading(true);\n//     const handleComplete = () => setLoading(false);\n//     router.events.on(\"routeChangeStart\", handleStart);\n//     router.events.on(\"routeChangeComplete\", handleComplete);\n//     router.events.on(\"routeChangeError\", handleComplete);\n//     // 搜索仓库\n//     // axios\n//     //   .get(\"/github/search/repositories?q=react\")\n//     //   .then((resp) => console.log(resp));\n//     return () => {\n//       router.events.off(\"routeChangeStart\", handleStart);\n//       router.events.off(\"routeChangeComplete\", handleComplete);\n//       router.events.off(\"routeChangeError\", handleComplete);\n//     };\n//   });\n//   // return loading && <div>Loading....{/*I have an animation here*/}</div>;\n//   return (\n//     <Provider store={reduxStore}>\n//       <Layout>\n//         <MyContext.Provider value=\"Melrose\">\n//           {/* <PageLoading /> */}\n//           {loading ? <PageLoading /> : null}\n//           <Component {...pageProps} />\n//         </MyContext.Provider>\n//       </Layout>\n//     </Provider>\n//   );\n// }\n// MyApp.getInitialProps = async (appContext) => {\n//   const { Component } = appContext;\n//   let pageProps = {};\n//   if (Component.getInitialProps) {\n//     pageProps = await\n//   }\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps };\n// };\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: \"value\",\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  // App组件的getInitialProps比较特殊\n  // 能拿到一些额外的参数\n  // Component: 被包裹的组件\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    let pageProps = {}; // 拿到Component上定义的getInitialProps\n\n    if (Component.getInitialProps) {\n      // 执行拿到返回结果`\n      pageProps = await Component.getInitialProps(ctx);\n    } // 返回给组件\n\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    Router.events.on(\"routeChangeStart\", this.startLoading);\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\n    Router.events.on(\"routeChangeError\", this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeStart\", this.startLoading);\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\n    Router.events.off(\"routeChangeError\", this.stopLoading);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: reduxStore,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: [this.state.loading && /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default testHoc(MyApp);","map":{"version":3,"sources":["D:/lls/chenzhengquan/Desktop/muke-study/nextjs-create-app/pages/_app.js"],"names":["App","Layout","useState","useEffect","useRouter","PageLoading","Provider","MyContext","testHoc","MyApp","context","loading","setState","getInitialProps","ctx","Component","pageProps","componentDidMount","Router","events","on","startLoading","stopLoading","componentWillUnmount","off","render","reduxStore","props","state"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,oBAAP;AACA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAN,SAAoBT,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAoBd;AACNU,MAAAA,OAAO,EAAE,OADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KApBc;;AAAA,0CAyBP,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA7BqB;;AAAA,yCA+BR,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAnCqB;AAAA;;AACtB;AACA;AACA;AACA,eAAaE,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACA,QAAIE,SAAS,GAAG,EAAhB,CAFgC,CAIhC;;AACA,QAAID,SAAS,CAACF,eAAd,EAA+B;AAC7B;AACAG,MAAAA,SAAS,GAAG,MAAMD,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACD,KAR+B,CAUhC;;;AACA,WAAO;AACLE,MAAAA;AADK,KAAP;AAGD;;AAmBDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACAH,IAAAA,MAAM,CAACC,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACAJ,IAAAA,MAAM,CAACC,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACC,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKH,YAA3C;AACAH,IAAAA,MAAM,CAACC,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyC,KAAKF,WAA9C;AACAJ,IAAAA,MAAM,CAACC,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,WAA3C;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBU,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,wBACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,UAAjB;AAAA,6BACE,QAAC,MAAD;AAAA,mBACG,KAAKE,KAAL,CAAWjB,OAAX,iBAAsB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADzB,eAGE,QAAC,SAAD,oBAAeK,SAAf;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA5DqB;;AA+DxB,eAAeR,OAAO,CAACC,KAAD,CAAtB","sourcesContent":["import \"../styles/globals.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from \"next/app\";\r\nimport Layout from \"../components/layout\";\r\n\r\n// import Router from \"next/router\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport PageLoading from \"../components/PageLoading\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport MyContext from \"../lib/my-context\";\r\n\r\nimport testHoc from \"../lib/with-redux\";\r\n\r\n// function MyApp({ Component, pageProps, reduxStore }) {\r\n//   const router = useRouter();\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const handleStart = () => setLoading(true);\r\n//     const handleComplete = () => setLoading(false);\r\n\r\n//     router.events.on(\"routeChangeStart\", handleStart);\r\n//     router.events.on(\"routeChangeComplete\", handleComplete);\r\n//     router.events.on(\"routeChangeError\", handleComplete);\r\n\r\n//     // 搜索仓库\r\n//     // axios\r\n//     //   .get(\"/github/search/repositories?q=react\")\r\n//     //   .then((resp) => console.log(resp));\r\n\r\n//     return () => {\r\n//       router.events.off(\"routeChangeStart\", handleStart);\r\n//       router.events.off(\"routeChangeComplete\", handleComplete);\r\n//       router.events.off(\"routeChangeError\", handleComplete);\r\n//     };\r\n//   });\r\n\r\n//   // return loading && <div>Loading....{/*I have an animation here*/}</div>;\r\n\r\n//   return (\r\n//     <Provider store={reduxStore}>\r\n//       <Layout>\r\n//         <MyContext.Provider value=\"Melrose\">\r\n//           {/* <PageLoading /> */}\r\n//           {loading ? <PageLoading /> : null}\r\n//           <Component {...pageProps} />\r\n//         </MyContext.Provider>\r\n//       </Layout>\r\n//     </Provider>\r\n//   );\r\n// }\r\n\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   const { Component } = appContext;\r\n//   let pageProps = {};\r\n//   if (Component.getInitialProps) {\r\n//     pageProps = await\r\n//   }\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//   return { ...appProps };\r\n// };\r\n\r\nclass MyApp extends App {\r\n  // App组件的getInitialProps比较特殊\r\n  // 能拿到一些额外的参数\r\n  // Component: 被包裹的组件\r\n  static async getInitialProps(ctx) {\r\n    const { Component } = ctx;\r\n    let pageProps = {};\r\n\r\n    // 拿到Component上定义的getInitialProps\r\n    if (Component.getInitialProps) {\r\n      // 执行拿到返回结果`\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n\r\n    // 返回给组件\r\n    return {\r\n      pageProps,\r\n    };\r\n  }\r\n\r\n  state = {\r\n    context: \"value\",\r\n    loading: false,\r\n  };\r\n\r\n  startLoading = () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n  };\r\n\r\n  stopLoading = () => {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    Router.events.on(\"routeChangeStart\", this.startLoading);\r\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\r\n    Router.events.on(\"routeChangeError\", this.stopLoading);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Router.events.off(\"routeChangeStart\", this.startLoading);\r\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\r\n    Router.events.off(\"routeChangeError\", this.stopLoading);\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, reduxStore } = this.props;\r\n    return (\r\n      <Provider store={reduxStore}>\r\n        <Layout>\r\n          {this.state.loading && <PageLoading />}\r\n          {/* 把pageProps解构后传递给组件 */}\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default testHoc(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}